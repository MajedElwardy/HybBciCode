demo()
install.packages()
cd
ls
politeness <- read.csv(file.choose( ))
politeness2 <- read.csv(file."d:\KULeuven\PhD\Courses-Tutorial\R-statistics\linearMixedModelWithR\politeness_data.csv");
politeness2 <- read.csv(file."d:/KULeuven/PhD/Courses-Tutorial/R-statistics/linearMixedModelWithR/politeness_data.csv");
politeness2 <- read.csv(file="d:/KULeuven/PhD/Courses-Tutorial/R-statistics/linearMixedModelWithR/politeness_data.csv");
rm(list=ls())
politeness <- read.csv(file="d:/KULeuven/PhD/Courses-Tutorial/R-statistics/linearMixedModelWithR/politeness_data.csv");
head()
head(politeness)
View(politeness)
View(politeness)
summary(politeness)
str(politeness)
colnames(politeness)
which(is.na(politeness)==T)
View(politeness)
boxplot(frequency ~ attitude, data=politeness)
#median(politeness[which(politeness$attitude=="pol"),]$frequency, na.rm=T)
T
#which(is.na(politeness)==T)
median(politeness[which(politeness$attitude=="pol"),]$frequency, na.rm=T)
library(lme4);library(languageR);
rm(list=ls());
politeness <- read.csv(file="d:/KULeuven/PhD/Courses-Tutorial/R-statistics/linearMixedModelWithR/politeness_data.csv");
#which(is.na(politeness)==T)
boxplot(frequency ~ attitude, data=politeness)
median(politeness[which(politeness$attitude=="pol"),]$frequency, na.rm=T)
median(politeness[which(politeness$attitude=="inf"),]$frequency)
boxplot(frequency ~ attitude*gender, data=politeness)
View(politeness)
View(politeness)
lmer(frequency ~ attitude, data=politeness)
politeness.model = lmer(frequency ~ attitude + (1|subject) + (1|scenario), data=politeness)
politeness.model
politeness.model.p = pvals.fnc(politeness.model)
politeness.model.p
View(politeness)
mean(politeness$frequency, na.rm=T)
mean(politeness[which(politeness$gender == "F"),]$frequency)
mean(politeness[which(politeness$gender == "M"),]$frequency)
mean(politeness[which(politeness$gender == "M"),]$frequency, na.rm=T)
politeness.model = lmer(frequency ~ attitude*gender + (1|subject) + (1|scenario), data=politeness)
politeness.model.p = pvals.fnc(politeness.model)
politeness.model.p
plot(fitted(politeness.model),residuals(politeness.model))
politeness.null = lmer(frequency ~ 1 + (1|subject) + (1|scenario), data=politeness)
anova(politeness.model, politeness.null)
??read
test <- scan(file="accuracyDataset.txt")
test <- scan(file="d:\KULeuven\PhD\Work\PatientStudy\statisticLME\accuracyDataset.txt")
test <- scan(file="d:/KULeuven/PhD/Work/PatientStudy/statisticLME/accuracyDataset.txt")
test <- read.table("d:/KULeuven/PhD/Work/PatientStudy/statisticLME/accuracyDataset.txt", header = TRUE, row.names = 1)
test <- read.table("d:/KULeuven/PhD/Work/PatientStudy/statisticLME/accuracyDataset.txt", header = TRUE)
View(test)
rm(list=ls());
accDataset <- read.table("d:/KULeuven/PhD/Work/PatientStudy/statisticLME/accuracyDataset.txt", header = TRUE)
boxplot(accuracy ~ system, data=accDataset)
boxplot(accuracy ~ system*timePerSymbol, data=accDataset)
View(accDataset)
View(accDataset)
accDataset.model = lmer(accuracy ~ system + (1|subject) + (1|timePerSymbol), data=accDataset)
accDataset.model.p = pvals.fnc(accDataset.model)
accDataset.model.p
accDataset.model = lmer(accuracy ~ system + (1|subject), data=accDataset)
accDataset.model.p = pvals.fnc(accDataset.model)
accDataset.model.p
accDataset.model = lmer(accuracy ~ system*timePerSymbol + (1|subject), data=accDataset)
accDataset.model.p = pvals.fnc(accDataset.model)
accDataset.model.p
library(lme4);library(languageR);
rm(list=ls());
accDataset <- read.table("d:/KULeuven/PhD/Work/PatientStudy/statisticLME/accuracyDataset.txt", header = TRUE)
boxplot(accuracy ~ system, data=accDataset)
boxplot(accuracy ~ system*timePerSymbol, data=accDataset)
accDataset.model = lmer(accuracy ~ system + (1|subject), data=accDataset)
accDataset.model.p = pvals.fnc(accDataset.model)
accDataset.model.p
accDataset.model = lmer(accuracy ~ system + (1|subject) + (1|timePerSymbol), data=accDataset)
accDataset.model.p = pvals.fnc(accDataset.model)
accDataset.model.p
accDataset.model = lmer(accuracy ~ system*timePerSymbol + (1|subject), data=accDataset)
accDataset.model.p = pvals.fnc(accDataset.model)
accDataset.model.p
View(accDataset)
View(accDataset)
library(lme4)
library(lme4)
str(Dyestuff)
head(Dyestuff)
summary(Dyestuff)
print(dotplot(reorder(Batch, Yield) ~ Yield, Dyestuff,
ylab = "Batch", jitter.y = TRUE, pch = 21,
xlab = "Yield of dyestuff (grams of standard color)",
type = c("p", "a")))
library(lme4);library(languageR);
rm(list=ls());
politeness <- read.csv(file="d:/KULeuven/PhD/Courses-Tutorial/R-statistics/linearMixedModelWithR/politeness_data.csv");
politeness <- read.csv(file="d:\KULeuven\PhD\Statistics\LMEStuffs\Winter (2011) A very basic tutorial for performing linear mixed effects analyses\politeness_data.csv");
politeness <- read.csv(file="d:/KULeuven/PhD/Statistics/LMEStuffs/Winter (2011) A very basic tutorial for performing linear mixed effects analyses/politeness_data.csv");
head()
head(politeness)
summary(politeness)
str(politeness)
colnamesstr(politeness)
colnames(politeness)
which(is.na(politeness)==T)
View(politeness)
56*4
56*4+39
clc
source('D:/KULeuven/PhD/Statistics/LMEStuffs/Winter (2011) A very basic tutorial for performing linear mixed effects analyses/RScriptLMM.R')
source('D:/KULeuven/PhD/Statistics/LMEStuffs/Winter (2011) A very basic tutorial for performing linear mixed effects analyses/RScriptLMM.R')
fix(politeness.model)
summary(politeness)
boxplot(frequency ~ attitude, data=politeness)
rm(list=ls());
politeness <- read.csv(file="d:/KULeuven/PhD/Statistics/LMEStuffs/Winter (2011) A very basic tutorial for performing linear mixed effects analyses/politeness_data.csv");
boxplot(frequency ~ attitude, data=politeness)
median(politeness[which(politeness$attitude=="pol"),]$frequency, na.rm=T)
median(politeness[which(politeness$attitude=="pol"),]$frequency, na.rm=T)
median(politeness[which(politeness$attitude=="inf"),]$frequency)
boxplot(frequency ~ attitude*gender, data=politeness)
politeness.model = lmer(frequency ~ attitude + (1|subject) + (1|scenario), data=politeness)
politeness.model
14.544^2
politeness.model.p = pvals.fnc(politeness.model)
politeness.model.p
mean(politeness$frequency, na.rm=T)
mean(politeness[which(politeness$gender == "F"),]$frequency)
mean(politeness[which(politeness$gender == "M"),]$frequency)
mean(politeness[which(politeness$gender == "M"),]$frequency, na.rm=T)
politeness.model = lmer(frequency ~ attitude*gender + (1|subject) + (1|scenario), data=politeness)
politeness.model
politeness.model.p = pvals.fnc(politeness.model)
politeness.model.p
plot(fitted(politeness.model),residuals(politeness.model))
example3 <- read.table("http://www.unt.edu/rss/class/Jon/R_SC/Module3/ExampleData3.txt", header=TRUE, sep="", na.strings="NA", dec=".", strip.white=TRUE)
summary(example3)
head(example3, 15)
attributes(example3)
library(lme4)
?lme4
?lmer
(1997). The data frame contains measurements of heart and body weight
install.packages("tools")
install.packages("stringr")
install.packages("tools")
install.packages("patchDVI", repos="http://R-Forge.R-project.org")
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP_2stim/02-ter-p3Classification/")
rm(list = ls())
library(ggplot2)
library(lme4)
library(LMERConvenienceFunctions)
library(languageR)
#################################################################################################################
iS <- 1
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watchERP_2stim/02-classify-erps/linSvm_1RunsForTrain/subject_S%d/Results_forLogisiticRegression.txt", iS)
accData1 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
str(accData1)
summary(accData1)
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP_2stim/02-ter-p3Classification/")
rm(list = ls())
library(ggplot2)
library(lme4)
library(LMERConvenienceFunctions)
library(languageR)
#################################################################################################################
iS <- 1
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watchERP_2stim/02-classify-erps/linSvm_1RunsForTrain/subject_S%d/Results_forLogisiticRegression.txt", iS)
accData1 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
str(accData1)
summary(accData1)
#################################################################################################################
pp <- ggplot( accData1, aes(nRep, correctness, colour=targetFrequency, shape=targetFrequency) )
pp <- pp + stat_summary(fun.y = mean, geom="point",  position = position_jitter(w = 0.2, h = 0), size = 3)
# pp <- pp + stat_summary(fun.y = mean, geom="point", position = position_dodge(.5))
# pp <- pp + stat_summary(fun.data = mean_cl_normal, geom = "pointrange", width = 0.2, position = position_dodge(.5), size = 1)
# pp <- pp + facet_wrap( ~subject )
# pp <- cleanPlot(pp)
# pp <- pp + theme(legend.position=c(0.8334,0.1667))
pp
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP_2stim/02-ter-p3Classification/")
rm(list = ls())
library(ggplot2)
library(lme4)
library(LMERConvenienceFunctions)
library(languageR)
#################################################################################################################
iS <- 1
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watchERP_2stim/02-classify-erps/linSvm_1RunsForTrain/subject_S%d/Results_forLogisiticRegression.txt", iS)
accData1 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData1$targetFrequency <- as.factor(accData1$targetFrequency)
str(accData1)
summary(accData1)
#################################################################################################################
pp <- ggplot( accData1, aes(nRep, correctness, colour=targetFrequency, shape=targetFrequency) )
pp <- pp + stat_summary(fun.y = mean, geom="point",  position = position_jitter(w = 0.2, h = 0), size = 3)
# pp <- pp + stat_summary(fun.y = mean, geom="point", position = position_dodge(.5))
# pp <- pp + stat_summary(fun.data = mean_cl_normal, geom = "pointrange", width = 0.2, position = position_dodge(.5), size = 1)
# pp <- pp + facet_wrap( ~subject )
# pp <- cleanPlot(pp)
# pp <- pp + theme(legend.position=c(0.8334,0.1667))
pp
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP_2stim/02-ter-p3Classification/")
rm(list = ls())
library(ggplot2)
library(lme4)
library(LMERConvenienceFunctions)
library(languageR)
#################################################################################################################
iS <- 1
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watchERP_2stim/02-classify-erps/linSvm_1RunsForTrain/subject_S%d/Results_forLogisiticRegression.txt", iS)
accData1 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData1$targetFrequency <- as.factor(accData1$targetFrequency)
str(accData1)
summary(accData1)
#################################################################################################################
pp <- ggplot( accData1, aes(nAverages, correctness, colour=targetFrequency, shape=targetFrequency) )
pp <- pp + stat_summary(fun.y = mean, geom="point",  position = position_jitter(w = 0.2, h = 0), size = 3)
# pp <- pp + stat_summary(fun.y = mean, geom="point", position = position_dodge(.5))
# pp <- pp + stat_summary(fun.data = mean_cl_normal, geom = "pointrange", width = 0.2, position = position_dodge(.5), size = 1)
# pp <- pp + facet_wrap( ~subject )
# pp <- cleanPlot(pp)
# pp <- pp + theme(legend.position=c(0.8334,0.1667))
pp
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP_2stim/02-ter-p3Classification/")
rm(list = ls())
library(ggplot2)
library(lme4)
library(LMERConvenienceFunctions)
library(languageR)
#################################################################################################################
iS <- 1
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watchERP_2stim/02-classify-erps/linSvm_1RunsForTrain/subject_S%d/Results_forLogisiticRegression.txt", iS)
accData1 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData1$targetFrequency <- as.factor(accData1$targetFrequency)
str(accData1)
summary(accData1)
#################################################################################################################
pp <- ggplot( accData1, aes(nAverages, correctness, colour=targetFrequency, shape=targetFrequency) )
pp <- pp + stat_summary(fun.y = mean, geom="point",  position = position_jitter(w = 0.2, h = 0), size = 3)
# pp <- pp + stat_summary(fun.y = mean, geom="point", position = position_dodge(.5))
# pp <- pp + stat_summary(fun.data = mean_cl_normal, geom = "pointrange", width = 0.2, position = position_dodge(.5), size = 1)
# pp <- pp + facet_wrap( ~subject )
# pp <- cleanPlot(pp)
# pp <- pp + theme(legend.position=c(0.8334,0.1667))
pp
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP_2stim/02-ter-p3Classification/")
rm(list = ls())
library(ggplot2)
library(lme4)
library(LMERConvenienceFunctions)
library(languageR)
#################################################################################################################
iS <- 1
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watchERP_2stim/02-classify-erps/linSvm_1RunsForTrain/subject_S%d/Results_forLogisiticRegression.txt", iS)
accData1 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData1$targetFrequency <- as.factor(accData1$targetFrequency)
str(accData1)
summary(accData1)
#################################################################################################################
pp <- ggplot( accData1, aes(nAverages, correctness, colour=targetFrequency, shape=targetFrequency) )
pp <- pp + stat_summary(fun.y = mean, geom="point",  position = position_jitter(w = 0.2, h = 0), size = 3)
# pp <- pp + stat_summary(fun.y = mean, geom="point", position = position_dodge(.5))
# pp <- pp + stat_summary(fun.data = mean_cl_normal, geom = "pointrange", width = 0.2, position = position_dodge(.5), size = 1)
# pp <- pp + facet_wrap( ~subject )
# pp <- cleanPlot(pp)
# pp <- pp + theme(legend.position=c(0.8334,0.1667))
pp
iS<-1
nRunsForTrain <- 1
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watchERP_2stim/02-classify-erps/linSvm_%dRunsForTrain/subject_S%d/Results_forLogisiticRegression.txt", nRunsForTrain, iS)
accData1 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
str(accData1)
summary(accData1)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP_2stim/03-classify-ssveps/generateDatasetsSrnCorrectness.R', echo=TRUE)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP_2stim/03-classify-ssveps/generateDatasetsSrnCorrectness.R', echo=TRUE)
#################################################################################################################
#################################################################################################################
#                           CORRECTNESS PER RUN/ROUND FOR EACH SUBJECT
#################################################################################################################
#################################################################################################################
subjects <- levels(snrData$subject)
nSub <- length(subjects)
figDir <- "d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciResults/watchERP_2stim/03-classify-ssveps/perRound"
dir.create(resDir, showWarnings=FALSE)
for (iS in 1:nSub){
figfilename <- file.path(figDir, sprintf("detail_corr_perRound_%s.png", subjects[iS] ))
png( filename = figfilename
, width=1920, height=1200, units="px"
)
subDataset <- accData[ accData[ , "subject"] == subjects[iS],  ]
pp <- ggplot( subDataset, aes(nRep, correctness, colour=targetFrequency ) )
pp <- pp + geom_point(size = 3)
pp <- pp + geom_line()
pp <- pp +facet_grid( run ~ roundNb )
pp <- cleanPlot(pp)
print(pp)
dev.off()
}
#################################################################################################################
#################################################################################################################
#                           CORRECTNESS PER RUN FOR EACH SUBJECT
#################################################################################################################
#################################################################################################################
figDir <- "d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciResults/watchERP_2stim/03-classify-ssveps/"
figfilename <- file.path(figDir, "detail_corr_perRun.png")
png( filename = figfilename
, width=1920, height=1200, units="px"
)
pp <- ggplot( accData, aes(nRep, correctness, colour=targetFrequency) )
pp <- pp + stat_summary(fun.y = mean, geom="point", position = position_dodge(0.2), size = 3)
pp <- pp + stat_summary(fun.y = mean, geom="line", position = position_dodge(0.2))
pp <- pp +facet_grid( subject ~ run )
pp <- cleanPlot(pp)
print(pp)
dev.off()
#################################################################################################################
#################################################################################################################
#                           SNR PER RUN FOR EACH SUBJECT
#################################################################################################################
#################################################################################################################
figDir <- "d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciResults/watchERP_2stim/03-classify-ssveps/"
figfilename <- file.path(figDir, "detail_snr_perRun.png")
png( filename = figfilename
, width=1920, height=1200, units="px"
)
pp <- ggplot( snrData, aes(nRep, snr, colour=watchedFrequency, shape=isTarget) )
pp <- pp + stat_summary(fun.y = mean, geom="point", position = position_dodge(0.2), size = 3)
pp <- pp + stat_summary(fun.y = mean, geom="line", position = position_dodge(0.2))
pp <- pp +facet_grid( subject ~ run, scales = "free_y" )
pp <- cleanPlot(pp)
print(pp)
dev.off()
#################################################################################################################
#################################################################################################################
#                                   CORRECTNESS PER SUBJECT
#################################################################################################################
#################################################################################################################
figDir <- "d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciResults/watchERP_2stim/03-classify-ssveps/"
figfilename <- file.path(figDir, "detail_corr_perSub.png")
png( filename = figfilename
, width=1920, height=1200, units="px"
)
pp <- ggplot( accData, aes(nRep, correctness, colour=targetFrequency) )
pp <- pp + stat_summary(fun.y = mean, geom="point", size = 3)
pp <- pp + stat_summary(fun.y = mean, geom="line")
# pp <- pp + stat_summary(fun.y = mean, geom="point", position = position_dodge(0.2), size = 3)
# pp <- pp + stat_summary(fun.y = mean, geom="line", position = position_dodge(0.2))
#   pp <- pp + geom_point(position = position_dodge(0.2), size = 3)
#   pp <- pp + geom_line(position = position_dodge(0.2))
pp <- pp +facet_wrap( ~subject )
pp <- cleanPlot(pp)
print(pp)
dev.off()
#################################################################################################################
#################################################################################################################
#                                   SNR PER SUBJECT
#################################################################################################################
#################################################################################################################
figDir <- "d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciResults/watchERP_2stim/03-classify-ssveps/"
figfilename <- file.path(figDir, "detail_snr_perSub.png")
png( filename = figfilename
, width=1920, height=1200, units="px"
)
pp <- ggplot( snrData, aes(nRep, snr, colour=targetFrequency) )
pp <- pp + stat_summary(fun.y = mean, geom="point", size = 3)
pp <- pp + stat_summary(fun.y = mean, geom="line")
# pp <- pp + stat_summary(fun.y = mean, geom="point", position = position_dodge(0.2), size = 3)
# pp <- pp + stat_summary(fun.y = mean, geom="line", position = position_dodge(0.2))
#   pp <- pp + geom_point(position = position_dodge(0.2), size = 3)
#   pp <- pp + geom_line(position = position_dodge(0.2))
pp <- pp +facet_wrap( ~subject, scales = "free" )
pp <- cleanPlot(pp)
print(pp)
dev.off()
#################################################################################################################
#################################################################################################################
#################################################################################################################
# subsetCh1 <- c( "O1", "Oz", "O2" )
# subsetCh2 <- c( "PO3", "PO4", "O1", "Oz", "O2" )
# subsetCh3 <- c( "CP5", "CP1", "CP2", "CP6", "P7", "P3", "Pz", "P4", "P8", "PO3", "PO4", "O1", "Oz", "O2" )
# subsetCh4 <- c( "C3", "Cz", "C4", "CP5", "CP1", "CP2", "CP6", "P7", "P3", "Pz", "P4", "P8", "PO3", "PO4", "O1", "Oz", "O2" )
# subsetCh5 <- "all"
# subsetCh <- list(subsetCh1, subsetCh2, subsetCh3, subsetCh4, subsetCh5)
#
figDir <- "d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciResults/watchERP_2stim/03-classify-ssveps/"
figfilename <- file.path(figDir, "detail_snr_perSub.png")
png( filename = figfilename
, width=1920, height=1200, units="px"
)
pp <- ggplot( snrData, aes(nRep, snr, colour=targetFrequency, shape=isTarget) )
pp <- pp + stat_summary(fun.y = mean, geom="point", size = 3)
pp <- pp + stat_summary(fun.y = mean, geom="line")
# pp <- pp + stat_summary(fun.y = mean, geom="point", position = position_dodge(0.2), size = 3)
# pp <- pp + stat_summary(fun.y = mean, geom="line", position = position_dodge(0.2))
#   pp <- pp + geom_point(position = position_dodge(0.2), size = 3)
#   pp <- pp + geom_line(position = position_dodge(0.2))
pp <- pp +facet_wrap( ~subject, scales = "free" )
pp <- cleanPlot(pp)
print(pp)
dev.off()
fidDir <- file.path(figDir, sprintf("subsetCh%d", ii))
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP_2stim/03-classify-ssveps/generateDatasetsSrnCorrectness.R', echo=TRUE)
figDir
ii
sprintf("subsetCh%d", ii)
file.path(figDir, sprintf("subsetCh%d", ii))
figDir <- "d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciResults/watchERP_2stim/03-classify-ssveps"
fidDir <- file.path(figDir, sprintf("subsetCh%d", ii))
fidDir
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP_2stim/03-classify-ssveps/generateDatasetsSrnCorrectness.R', echo=TRUE)
dev.off()
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP_2stim/03-classify-ssveps/generateDatasetsSrnCorrectness.R', echo=TRUE)
subsetCh[ii]
subsetCh[1]
subsetCh[[1]]
subsetCh
dev.off()
dev.off()
subsetCh1 <- c( "O1", "Oz", "O2" )
subsetCh2 <- c( "PO3", "PO4", "O1", "Oz", "O2" )
subsetCh3 <- c( "CP5", "CP1", "CP2", "CP6", "P7", "P3", "Pz", "P4", "P8", "PO3", "PO4", "O1", "Oz", "O2" )
subsetCh4 <- c( "C3", "Cz", "C4", "CP5", "CP1", "CP2", "CP6", "P7", "P3", "Pz", "P4", "P8", "PO3", "PO4", "O1", "Oz", "O2" )
subsetCh5 <- "all"
subsetCh <- list(subsetCh1, subsetCh2, subsetCh3, subsetCh4, subsetCh5)
harmonics <- c(0, 1)
figDir <- "d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciResults/watchERP_2stim/03-classify-ssveps"
figDir <- file.path(figDir, "subsetCh1")
dir.create(figDir, showWarnings=FALSE)
generateSnrCorrPlots(subsetCh[[1]], harmonics, figDir)
