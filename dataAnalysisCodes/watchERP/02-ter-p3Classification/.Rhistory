demo()
install.packages()
cd
ls
politeness <- read.csv(file.choose( ))
politeness2 <- read.csv(file."d:\KULeuven\PhD\Courses-Tutorial\R-statistics\linearMixedModelWithR\politeness_data.csv");
politeness2 <- read.csv(file."d:/KULeuven/PhD/Courses-Tutorial/R-statistics/linearMixedModelWithR/politeness_data.csv");
politeness2 <- read.csv(file="d:/KULeuven/PhD/Courses-Tutorial/R-statistics/linearMixedModelWithR/politeness_data.csv");
rm(list=ls())
politeness <- read.csv(file="d:/KULeuven/PhD/Courses-Tutorial/R-statistics/linearMixedModelWithR/politeness_data.csv");
head()
head(politeness)
View(politeness)
View(politeness)
summary(politeness)
str(politeness)
colnames(politeness)
which(is.na(politeness)==T)
View(politeness)
boxplot(frequency ~ attitude, data=politeness)
#median(politeness[which(politeness$attitude=="pol"),]$frequency, na.rm=T)
T
#which(is.na(politeness)==T)
median(politeness[which(politeness$attitude=="pol"),]$frequency, na.rm=T)
library(lme4);library(languageR);
rm(list=ls());
politeness <- read.csv(file="d:/KULeuven/PhD/Courses-Tutorial/R-statistics/linearMixedModelWithR/politeness_data.csv");
#which(is.na(politeness)==T)
boxplot(frequency ~ attitude, data=politeness)
median(politeness[which(politeness$attitude=="pol"),]$frequency, na.rm=T)
median(politeness[which(politeness$attitude=="inf"),]$frequency)
boxplot(frequency ~ attitude*gender, data=politeness)
View(politeness)
View(politeness)
lmer(frequency ~ attitude, data=politeness)
politeness.model = lmer(frequency ~ attitude + (1|subject) + (1|scenario), data=politeness)
politeness.model
politeness.model.p = pvals.fnc(politeness.model)
politeness.model.p
View(politeness)
mean(politeness$frequency, na.rm=T)
mean(politeness[which(politeness$gender == "F"),]$frequency)
mean(politeness[which(politeness$gender == "M"),]$frequency)
mean(politeness[which(politeness$gender == "M"),]$frequency, na.rm=T)
politeness.model = lmer(frequency ~ attitude*gender + (1|subject) + (1|scenario), data=politeness)
politeness.model.p = pvals.fnc(politeness.model)
politeness.model.p
plot(fitted(politeness.model),residuals(politeness.model))
politeness.null = lmer(frequency ~ 1 + (1|subject) + (1|scenario), data=politeness)
anova(politeness.model, politeness.null)
??read
test <- scan(file="accuracyDataset.txt")
test <- scan(file="d:\KULeuven\PhD\Work\PatientStudy\statisticLME\accuracyDataset.txt")
test <- scan(file="d:/KULeuven/PhD/Work/PatientStudy/statisticLME/accuracyDataset.txt")
test <- read.table("d:/KULeuven/PhD/Work/PatientStudy/statisticLME/accuracyDataset.txt", header = TRUE, row.names = 1)
test <- read.table("d:/KULeuven/PhD/Work/PatientStudy/statisticLME/accuracyDataset.txt", header = TRUE)
View(test)
rm(list=ls());
accDataset <- read.table("d:/KULeuven/PhD/Work/PatientStudy/statisticLME/accuracyDataset.txt", header = TRUE)
boxplot(accuracy ~ system, data=accDataset)
boxplot(accuracy ~ system*timePerSymbol, data=accDataset)
View(accDataset)
View(accDataset)
accDataset.model = lmer(accuracy ~ system + (1|subject) + (1|timePerSymbol), data=accDataset)
accDataset.model.p = pvals.fnc(accDataset.model)
accDataset.model.p
accDataset.model = lmer(accuracy ~ system + (1|subject), data=accDataset)
accDataset.model.p = pvals.fnc(accDataset.model)
accDataset.model.p
accDataset.model = lmer(accuracy ~ system*timePerSymbol + (1|subject), data=accDataset)
accDataset.model.p = pvals.fnc(accDataset.model)
accDataset.model.p
library(lme4);library(languageR);
rm(list=ls());
accDataset <- read.table("d:/KULeuven/PhD/Work/PatientStudy/statisticLME/accuracyDataset.txt", header = TRUE)
boxplot(accuracy ~ system, data=accDataset)
boxplot(accuracy ~ system*timePerSymbol, data=accDataset)
accDataset.model = lmer(accuracy ~ system + (1|subject), data=accDataset)
accDataset.model.p = pvals.fnc(accDataset.model)
accDataset.model.p
accDataset.model = lmer(accuracy ~ system + (1|subject) + (1|timePerSymbol), data=accDataset)
accDataset.model.p = pvals.fnc(accDataset.model)
accDataset.model.p
accDataset.model = lmer(accuracy ~ system*timePerSymbol + (1|subject), data=accDataset)
accDataset.model.p = pvals.fnc(accDataset.model)
accDataset.model.p
View(accDataset)
View(accDataset)
library(lme4)
library(lme4)
str(Dyestuff)
head(Dyestuff)
summary(Dyestuff)
print(dotplot(reorder(Batch, Yield) ~ Yield, Dyestuff,
ylab = "Batch", jitter.y = TRUE, pch = 21,
xlab = "Yield of dyestuff (grams of standard color)",
type = c("p", "a")))
library(lme4);library(languageR);
rm(list=ls());
politeness <- read.csv(file="d:/KULeuven/PhD/Courses-Tutorial/R-statistics/linearMixedModelWithR/politeness_data.csv");
politeness <- read.csv(file="d:\KULeuven\PhD\Statistics\LMEStuffs\Winter (2011) A very basic tutorial for performing linear mixed effects analyses\politeness_data.csv");
politeness <- read.csv(file="d:/KULeuven/PhD/Statistics/LMEStuffs/Winter (2011) A very basic tutorial for performing linear mixed effects analyses/politeness_data.csv");
head()
head(politeness)
summary(politeness)
str(politeness)
colnamesstr(politeness)
colnames(politeness)
which(is.na(politeness)==T)
View(politeness)
56*4
56*4+39
clc
source('D:/KULeuven/PhD/Statistics/LMEStuffs/Winter (2011) A very basic tutorial for performing linear mixed effects analyses/RScriptLMM.R')
source('D:/KULeuven/PhD/Statistics/LMEStuffs/Winter (2011) A very basic tutorial for performing linear mixed effects analyses/RScriptLMM.R')
fix(politeness.model)
summary(politeness)
boxplot(frequency ~ attitude, data=politeness)
rm(list=ls());
politeness <- read.csv(file="d:/KULeuven/PhD/Statistics/LMEStuffs/Winter (2011) A very basic tutorial for performing linear mixed effects analyses/politeness_data.csv");
boxplot(frequency ~ attitude, data=politeness)
median(politeness[which(politeness$attitude=="pol"),]$frequency, na.rm=T)
median(politeness[which(politeness$attitude=="pol"),]$frequency, na.rm=T)
median(politeness[which(politeness$attitude=="inf"),]$frequency)
boxplot(frequency ~ attitude*gender, data=politeness)
politeness.model = lmer(frequency ~ attitude + (1|subject) + (1|scenario), data=politeness)
politeness.model
14.544^2
politeness.model.p = pvals.fnc(politeness.model)
politeness.model.p
mean(politeness$frequency, na.rm=T)
mean(politeness[which(politeness$gender == "F"),]$frequency)
mean(politeness[which(politeness$gender == "M"),]$frequency)
mean(politeness[which(politeness$gender == "M"),]$frequency, na.rm=T)
politeness.model = lmer(frequency ~ attitude*gender + (1|subject) + (1|scenario), data=politeness)
politeness.model
politeness.model.p = pvals.fnc(politeness.model)
politeness.model.p
plot(fitted(politeness.model),residuals(politeness.model))
example3 <- read.table("http://www.unt.edu/rss/class/Jon/R_SC/Module3/ExampleData3.txt", header=TRUE, sep="", na.strings="NA", dec=".", strip.white=TRUE)
summary(example3)
head(example3, 15)
attributes(example3)
library(lme4)
?lme4
?lmer
(1997). The data frame contains measurements of heart and body weight
install.packages("tools")
install.packages("stringr")
install.packages("tools")
install.packages("patchDVI", repos="http://R-Forge.R-project.org")
accData <- data.frame()
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/02-ter-p3Classification/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(ez)
accData <- data.frame()
for (iS in 1:2)
{
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/02-ter-p3Classification/LinSvm/subject_S%d/Results.txt", iS)
accData1 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData1$nAverages = as.factor(accData1$nAverages)
accData1 <- subset( accData1, conditionTrain == conditionTest)
accData1$condition = accData1$conditionTrain;
accData1 <- subset(accData1, select = -c(conditionTrain, conditionTest))
accData1 <- subset(accData1, condition != "oddball")
accData1$nAverages = as.factor(accData$nAverages)
str(accData1)
summary(accData1)
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/02-ter-p3Classification/LinSvmPooled/subject_S%d/Results.txt", iS)
accData2 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData2$nAverages = as.factor(accData2$nAverages)
accData2$condition = accData2$conditionTest;
accData2 <- subset(accData2, select = -conditionTest)
accData2 <- subset(accData2, condition != "oddball")
str(accData2)
summary(accData2)
temp1 <- accData1;
temp2 <- accData2;
temp1$classifier <- "normal"
temp2$classifier <- "pooled"
temp <- rbind(temp1, temp2)
accData <- data.frame(accData, temp)
}
# graph
barplot <- ggplot(temp)
barplot <- barplot + geom_point( aes(nAverages, accuracy, shape=condition, colour=classifier), position = position_jitter(w = 0.1, h = 0)  )
barplot <- barplot + facet_wrap( ~subject )
barplot
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/02-ter-p3Classification/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(ez)
accData <- data.frame()
iS <- 1
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/02-ter-p3Classification/LinSvm/subject_S%d/Results.txt", iS)
filename
accData1 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData1$nAverages = as.factor(accData1$nAverages)
accData1 <- subset( accData1, conditionTrain == conditionTest)
accData1$condition = accData1$conditionTrain;
accData1 <- subset(accData1, select = -c(conditionTrain, conditionTest))
accData1 <- subset(accData1, condition != "oddball")
accData1$nAverages = as.factor(accData$nAverages)
str(accData1)
summary(accData1)
rm(list = ls())
accData <- data.frame()
iS <- 1
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/02-ter-p3Classification/LinSvm/subject_S%d/Results.txt", iS)
accData1 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
str(accData1)
accData1$nAverages = as.factor(accData1$nAverages)
accData1 <- subset( accData1, conditionTrain == conditionTest)
accData1$condition = accData1$conditionTrain;
accData1 <- subset(accData1, select = -c(conditionTrain, conditionTest))
accData1 <- subset(accData1, condition != "oddball")
str(accData1)
summary(accData1)
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/02-ter-p3Classification/LinSvmPooled/subject_S%d/Results.txt", iS)
accData2 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData2$nAverages = as.factor(accData2$nAverages)
accData2$condition = accData2$conditionTest;
accData2 <- subset(accData2, select = -conditionTest)
accData2 <- subset(accData2, condition != "oddball")
str(accData2)
summary(accData2)
temp1 <- accData1;
temp2 <- accData2;
temp1$classifier <- "normal"
temp2$classifier <- "pooled"
temp <- rbind(temp1, temp2)
str(temp)
accData <- data.frame(accData, temp)
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/02-ter-p3Classification/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(ez)
for (iS in 1:2)
{
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/02-ter-p3Classification/LinSvm/subject_S%d/Results.txt", iS)
accData1 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData1$nAverages = as.factor(accData1$nAverages)
accData1 <- subset( accData1, conditionTrain == conditionTest)
accData1$condition = accData1$conditionTrain;
accData1 <- subset(accData1, select = -c(conditionTrain, conditionTest))
accData1 <- subset(accData1, condition != "oddball")
str(accData1)
summary(accData1)
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/02-ter-p3Classification/LinSvmPooled/subject_S%d/Results.txt", iS)
accData2 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData2$nAverages = as.factor(accData2$nAverages)
accData2$condition = accData2$conditionTest;
accData2 <- subset(accData2, select = -conditionTest)
accData2 <- subset(accData2, condition != "oddball")
str(accData2)
summary(accData2)
temp1 <- accData1;
temp2 <- accData2;
temp1$classifier <- "normal"
temp2$classifier <- "pooled"
temp <- rbind(temp1, temp2)
if (iS == 1) { accData <- temp }
else { accData <- data.frame(accData, temp) }
}
# graph
barplot <- ggplot(temp)
barplot <- barplot + geom_point( aes(nAverages, accuracy, shape=condition, colour=classifier), position = position_jitter(w = 0.1, h = 0)  )
barplot <- barplot + facet_wrap( ~subject )
barplot
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/02-ter-p3Classification/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(ez)
for (iS in 1:2)
{
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/02-ter-p3Classification/LinSvm/subject_S%d/Results.txt", iS)
accData1 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData1$nAverages = as.factor(accData1$nAverages)
accData1 <- subset( accData1, conditionTrain == conditionTest)
accData1$condition = accData1$conditionTrain;
accData1 <- subset(accData1, select = -c(conditionTrain, conditionTest))
accData1 <- subset(accData1, condition != "oddball")
str(accData1)
summary(accData1)
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/02-ter-p3Classification/LinSvmPooled/subject_S%d/Results.txt", iS)
accData2 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData2$nAverages = as.factor(accData2$nAverages)
accData2$condition = accData2$conditionTest;
accData2 <- subset(accData2, select = -conditionTest)
accData2 <- subset(accData2, condition != "oddball")
str(accData2)
summary(accData2)
temp1 <- accData1;
temp2 <- accData2;
temp1$classifier <- "normal"
temp2$classifier <- "pooled"
temp <- rbind(temp1, temp2)
if (iS == 1) { accData <- temp }
else { accData <- data.frame(accData, temp) }
}
# graph
barplot <- ggplot(accData)
barplot <- barplot + geom_point( aes(nAverages, accuracy, shape=condition, colour=classifier), position = position_jitter(w = 0.1, h = 0)  )
barplot <- barplot + facet_wrap( ~subject )
barplot
str(accData)
str(accData2)
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/02-ter-p3Classification/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(ez)
for (iS in 1:2)
{
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/02-ter-p3Classification/LinSvm/subject_S%d/Results.txt", iS)
accData1 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData1$nAverages = as.factor(accData1$nAverages)
accData1 <- subset( accData1, conditionTrain == conditionTest)
accData1$condition = accData1$conditionTrain;
accData1 <- subset(accData1, select = -c(conditionTrain, conditionTest))
accData1 <- subset(accData1, condition != "oddball")
str(accData1)
summary(accData1)
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/02-ter-p3Classification/LinSvmPooled/subject_S%d/Results.txt", iS)
accData2 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData2$nAverages = as.factor(accData2$nAverages)
accData2$condition = accData2$conditionTest;
accData2 <- subset(accData2, select = -conditionTest)
accData2 <- subset(accData2, condition != "oddball")
str(accData2)
summary(accData2)
temp1 <- accData1;
temp2 <- accData2;
temp1$classifier <- "normal"
temp2$classifier <- "pooled"
temp <- rbind(temp1, temp2)
temp$classifier = as.factor(temp$classifier)
if (iS == 1) { accData <- temp }
else { accData <- rbind(accData, temp) }
}
# graph
barplot <- ggplot(accData)
barplot <- barplot + geom_point( aes(nAverages, accuracy, shape=condition, colour=classifier), position = position_jitter(w = 0.1, h = 0)  )
barplot <- barplot + facet_wrap( ~subject )
barplot
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/02-ter-p3Classification/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(ez)
for (iS in 1:2)
{
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/02-ter-p3Classification/LinSvm/subject_S%d/Results.txt", iS)
accData1 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData1$nAverages = as.factor(accData1$nAverages)
accData1 <- subset( accData1, conditionTrain == conditionTest)
accData1$condition = accData1$conditionTrain;
accData1 <- subset(accData1, select = -c(conditionTrain, conditionTest))
accData1 <- subset(accData1, condition != "oddball")
str(accData1)
summary(accData1)
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/02-ter-p3Classification/LinSvmPooled/subject_S%d/Results.txt", iS)
accData2 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData2$nAverages = as.factor(accData2$nAverages)
accData2$condition = accData2$conditionTest;
accData2 <- subset(accData2, select = -conditionTest)
accData2 <- subset(accData2, condition != "oddball")
str(accData2)
summary(accData2)
temp1 <- accData1;
temp2 <- accData2;
temp1$classifier <- "normal"
temp2$classifier <- "pooled"
temp <- rbind(temp1, temp2)
temp$classifier = as.factor(temp$classifier)
if (iS == 1) { accData <- temp }
else { accData <- rbind(accData, temp) }
}
# graph
barplot <- ggplot(accData)
barplot <- barplot + geom_point( aes(nAverages, accuracy, shape=condition, colour=classifier), position = position_jitter(w = 0.1, h = 0)  )
barplot <- barplot + facet_wrap( ~subject )
barplot
barplot <- ggplot(accData)
barplot <- barplot + geom_point( aes(nAverages, accuracy, shape=condition, colour=classifier), position = position_jitter(w = 0.2, h = 0)  )
barplot <- barplot + facet_wrap( ~subject )
barplot
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/02-ter-p3Classification/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(ez)
for (iS in 1:3)
{
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/02-ter-p3Classification/LinSvm/subject_S%d/Results.txt", iS)
accData1 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData1$nAverages = as.factor(accData1$nAverages)
accData1 <- subset( accData1, conditionTrain == conditionTest)
accData1$condition = accData1$conditionTrain;
accData1 <- subset(accData1, select = -c(conditionTrain, conditionTest))
accData1 <- subset(accData1, condition != "oddball")
str(accData1)
summary(accData1)
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/02-ter-p3Classification/LinSvmPooled/subject_S%d/Results.txt", iS)
accData2 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData2$nAverages = as.factor(accData2$nAverages)
accData2$condition = accData2$conditionTest;
accData2 <- subset(accData2, select = -conditionTest)
accData2 <- subset(accData2, condition != "oddball")
str(accData2)
summary(accData2)
temp1 <- accData1;
temp2 <- accData2;
temp1$classifier <- "normal"
temp2$classifier <- "pooled"
temp <- rbind(temp1, temp2)
temp$classifier = as.factor(temp$classifier)
if (iS == 1) { accData <- temp }
else { accData <- rbind(accData, temp) }
}
# graph
barplot <- ggplot(accData)
barplot <- barplot + geom_point( aes(nAverages, accuracy, shape=condition, colour=classifier), position = position_jitter(w = 0.2, h = 0)  )
barplot <- barplot + facet_wrap( ~subject )
barplot
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/02-ter-p3Classification/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(ez)
for (iS in 1:3)
{
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/02-ter-p3Classification/LinSvm/subject_S%d/Results.txt", iS)
accData1 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData1$nAverages = as.factor(accData1$nAverages)
accData1 <- subset( accData1, conditionTrain == conditionTest)
accData1$condition = accData1$conditionTrain;
accData1 <- subset(accData1, select = -c(conditionTrain, conditionTest))
accData1 <- subset(accData1, condition != "oddball")
str(accData1)
summary(accData1)
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/02-ter-p3Classification/LinSvmPooled/subject_S%d/Results.txt", iS)
accData2 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData2$nAverages = as.factor(accData2$nAverages)
accData2$condition = accData2$conditionTest;
accData2 <- subset(accData2, select = -conditionTest)
accData2 <- subset(accData2, condition != "oddball")
str(accData2)
summary(accData2)
temp1 <- accData1;
temp2 <- accData2;
temp1$classifier <- "normal"
temp2$classifier <- "pooled"
temp <- rbind(temp1, temp2)
temp$classifier = as.factor(temp$classifier)
if (iS == 1) { accData <- temp }
else { accData <- rbind(accData, temp) }
}
# graph
barplot <- ggplot(accData)
barplot <- barplot + geom_point( aes(nAverages, accuracy, shape=condition, colour=classifier), position = position_jitter(w = 0.2, h = 0)  )
barplot <- barplot + facet_wrap( ~subject )
barplot
pp1 = plot_set(list(barplot),fwidth = unit(16, "cm"), fheight = unit(8, "cm"),fontsize = 8,keepColor=T)
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/02-ter-p3Classification/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(ez)
source("d:/KULeuven/PhD/rLibrary/plot_set.R")
for (iS in 1:3)
{
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/02-ter-p3Classification/LinSvm/subject_S%d/Results.txt", iS)
accData1 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData1$nAverages = as.factor(accData1$nAverages)
accData1 <- subset( accData1, conditionTrain == conditionTest)
accData1$condition = accData1$conditionTrain;
accData1 <- subset(accData1, select = -c(conditionTrain, conditionTest))
accData1 <- subset(accData1, condition != "oddball")
str(accData1)
summary(accData1)
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/02-ter-p3Classification/LinSvmPooled/subject_S%d/Results.txt", iS)
accData2 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData2$nAverages = as.factor(accData2$nAverages)
accData2$condition = accData2$conditionTest;
accData2 <- subset(accData2, select = -conditionTest)
accData2 <- subset(accData2, condition != "oddball")
str(accData2)
summary(accData2)
temp1 <- accData1;
temp2 <- accData2;
temp1$classifier <- "normal"
temp2$classifier <- "pooled"
temp <- rbind(temp1, temp2)
temp$classifier = as.factor(temp$classifier)
if (iS == 1) { accData <- temp }
else { accData <- rbind(accData, temp) }
}
# graph
barplot <- ggplot(accData)
barplot <- barplot + geom_point( aes(nAverages, accuracy, shape=condition, colour=classifier), position = position_jitter(w = 0.2, h = 0)  )
barplot <- barplot + facet_wrap( ~subject )
barplot
pp1 = plot_set(list(barplot),fwidth = unit(16, "cm"), fheight = unit(8, "cm"),fontsize = 8,keepColor=T)
pp1 = plot_set(list(barplot),fwidth = unit(16, "cm"), fheight = unit(16, "cm"),fontsize = 8,keepColor=T)
pp1 = plot_set(list(barplot),fwidth = unit(32, "cm"), fheight = unit(16, "cm"),fontsize = 8,keepColor=T)
