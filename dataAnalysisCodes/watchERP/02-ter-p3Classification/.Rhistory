, axis.text.y = element_text(face="plain", size = fontsize, colour = 'black')
, plot.title = element_text(face="plain", size = fontsize, colour = "black")
, legend.text = element_text(face="plain", size = fontsize)
, legend.title = element_text(face="plain", size = fontsize)
, strip.background = element_blank()
)
barplot
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(grid)
source("http://egret.psychol.cam.ac.uk/statistics/R/extensions/rnc_ggplot2_border_themes_2013_01.r")
snrDataOz <- read.csv("snrDatasetOz.csv", header = TRUE)
snrDataOz$frequency = as.factor(snrDataOz$frequency)
snrDataOz$oddball = as.factor(snrDataOz$oddball)
snrDataOz$fileNb = as.factor(snrDataOz$fileNb)
snrDataOz$trial = as.factor(snrDataOz$trial)
# snrDataOz$stimDuration = as.factor(snrDataOz$stimDuration)
str(snrDataOz)
summary(snrDataOz)
# graphs
# fontsize <- 12;
# barplot <- ggplot(snrDataOz)
# barplot <- barplot + geom_point(
#   aes(frequency, snr, shape=subject, colour=oddball)
#   , position = position_jitter(w = 0.2, h = 0)
#   , size = 3
# )
# barplot <- barplot + facet_wrap( ~stimDuration, scale="free_y" )
# barplot <- barplot + theme(
#   panel.background =  element_rect(fill='white')
#   ,panel.grid.major = element_line(colour = "black", size = 0.5, linetype = "dotted")
#   #   ,panel.grid.minor = element_line(colour = "black", size = 0.5, linetype = "dotted")
#   #   , panel.grid.major = element_blank() # switch off major gridlines
#   , panel.grid.minor = element_blank() # switch off minor gridlines
#   , axis.ticks = element_line(colour = 'black')
#   , axis.line = element_line(colour = 'black')
#   , panel.border = theme_border(c("left","bottom"), size=0.25)
#   , axis.title.y = element_text(face="plain", size = fontsize, angle=90, colour = 'black')
#   , axis.title.x = element_text(face="plain", size = fontsize, angle=0, colour = 'black')
#   , axis.text.x = element_text(face="plain", size = fontsize, colour = 'black')
#   , axis.text.y = element_text(face="plain", size = fontsize, colour = 'black')
#   , plot.title = element_text(face="plain", size = fontsize, colour = "black")
#   , legend.text = element_text(face="plain", size = fontsize)
#   , legend.title = element_text(face="plain", size = fontsize)
#   , strip.background = element_blank()
# )
# barplot
pp <- ggplot(snrDataOz,aes(stimDuration, snr, shape=oddball, colour=oddball) )
pp <- pp + geom_point(
position = position_jitter(w = 0.2, h = 0)
, size = 3
)
pp <- pp + facet_wrap( ~frequency )
pp <- pp + geom_smooth(method="lm", aes(fill=oddball), se = F)
pp <- pp + theme(
panel.background =  element_rect(fill='white')
,panel.grid.major = element_line(colour = "black", size = 0.5, linetype = "dotted")
#   ,panel.grid.minor = element_line(colour = "black", size = 0.5, linetype = "dotted")
#   , panel.grid.major = element_blank() # switch off major gridlines
, panel.grid.minor = element_blank() # switch off minor gridlines
, axis.ticks = element_line(colour = 'black')
, axis.line = element_line(colour = 'black')
, panel.border = theme_border(c("left","bottom"), size=0.25)
, axis.title.y = element_text(face="plain", size = fontsize, angle=90, colour = 'black')
, axis.title.x = element_text(face="plain", size = fontsize, angle=0, colour = 'black')
, axis.text.x = element_text(face="plain", size = fontsize, colour = 'black')
, axis.text.y = element_text(face="plain", size = fontsize, colour = 'black')
, plot.title = element_text(face="plain", size = fontsize, colour = "black")
, legend.text = element_text(face="plain", size = fontsize)
, legend.title = element_text(face="plain", size = fontsize)
, strip.background = element_blank()
)
pp
pp <- ggplot(snrDataOz,aes(stimDuration, snr, shape=oddball, colour=oddball) )
pp <- pp + geom_point(
position = position_jitter(w = 0.2, h = 0)
, size = 3
)
pp <- pp + facet_wrap( ~frequency + subject )
pp <- pp + geom_smooth(method="lm", aes(fill=oddball), se = F)
pp
pp <- pp + facet_wrap( ~subject + frequency )
pp
pp <- ggplot(snrDataOz,aes(stimDuration, snr, shape=oddball, colour=oddball) )
pp <- pp + geom_point(
position = position_jitter(w = 0.2, h = 0)
, size = 3
)
pp <- pp + facet_wrap( ~subject + frequency )
pp <- pp + geom_smooth(method="lm", aes(fill=oddball), se = F)
pp
pp <- ggplot(snrDataOz,aes(stimDuration, snr, shape=oddball, colour=oddball) )
pp <- pp + geom_point(
position = position_jitter(w = 0.2, h = 0)
, size = 3
)
pp <- pp + facet_wrap( ~subject + frequency, ncol = 4 )
pp <- pp + geom_smooth(method="lm", aes(fill=oddball), se = F)
pp
pp2 <- ggplot(snrDataOz,aes(stimDuration, snr, shape=frequency, colour=frequency) )
pp2 <- pp2 + geom_point(
position = position_jitter(w = 0.2, h = 0)
, size = 3
)
pp2 <- pp2 + facet_wrap( ~subject + oddball )
pp2 <- pp2 + geom_smooth(method="lm", aes(fill=frequency), se = F)
pp2
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(grid)
source("http://egret.psychol.cam.ac.uk/statistics/R/extensions/rnc_ggplot2_border_themes_2013_01.r")
snrDataOz <- read.csv("snrDatasetOz.csv", header = TRUE)
snrDataOz$frequency = as.factor(snrDataOz$frequency)
snrDataOz$oddball = as.factor(snrDataOz$oddball)
snrDataOz$fileNb = as.factor(snrDataOz$fileNb)
snrDataOz$trial = as.factor(snrDataOz$trial)
# snrDataOz$stimDuration = as.factor(snrDataOz$stimDuration)
str(snrDataOz)
summary(snrDataOz)
# graphs
# fontsize <- 12;
# barplot <- ggplot(snrDataOz)
# barplot <- barplot + geom_point(
#   aes(frequency, snr, shape=subject, colour=oddball)
#   , position = position_jitter(w = 0.2, h = 0)
#   , size = 3
# )
# barplot <- barplot + facet_wrap( ~stimDuration, scale="free_y" )
# barplot <- barplot + theme(
#   panel.background =  element_rect(fill='white')
#   ,panel.grid.major = element_line(colour = "black", size = 0.5, linetype = "dotted")
#   #   ,panel.grid.minor = element_line(colour = "black", size = 0.5, linetype = "dotted")
#   #   , panel.grid.major = element_blank() # switch off major gridlines
#   , panel.grid.minor = element_blank() # switch off minor gridlines
#   , axis.ticks = element_line(colour = 'black')
#   , axis.line = element_line(colour = 'black')
#   , panel.border = theme_border(c("left","bottom"), size=0.25)
#   , axis.title.y = element_text(face="plain", size = fontsize, angle=90, colour = 'black')
#   , axis.title.x = element_text(face="plain", size = fontsize, angle=0, colour = 'black')
#   , axis.text.x = element_text(face="plain", size = fontsize, colour = 'black')
#   , axis.text.y = element_text(face="plain", size = fontsize, colour = 'black')
#   , plot.title = element_text(face="plain", size = fontsize, colour = "black")
#   , legend.text = element_text(face="plain", size = fontsize)
#   , legend.title = element_text(face="plain", size = fontsize)
#   , strip.background = element_blank()
# )
# barplot
pp <- ggplot(snrDataOz,aes(stimDuration, snr, shape=oddball, colour=oddball) )
pp <- pp + geom_point(
position = position_jitter(w = 0.2, h = 0)
, size = 3
)
pp <- pp + facet_wrap( ~subject + frequency, ncol = 4 )
pp <- pp + geom_smooth(method="lm", aes(fill=oddball), se = F)
pp <- pp + theme(
panel.background =  element_rect(fill='white')
,panel.grid.major = element_line(colour = "black", size = 0.5, linetype = "dotted")
#   ,panel.grid.minor = element_line(colour = "black", size = 0.5, linetype = "dotted")
#   , panel.grid.major = element_blank() # switch off major gridlines
, panel.grid.minor = element_blank() # switch off minor gridlines
, axis.ticks = element_line(colour = 'black')
, axis.line = element_line(colour = 'black')
, panel.border = theme_border(c("left","bottom"), size=0.25)
, axis.title.y = element_text(face="plain", size = fontsize, angle=90, colour = 'black')
, axis.title.x = element_text(face="plain", size = fontsize, angle=0, colour = 'black')
, axis.text.x = element_text(face="plain", size = fontsize, colour = 'black')
, axis.text.y = element_text(face="plain", size = fontsize, colour = 'black')
, plot.title = element_text(face="plain", size = fontsize, colour = "black")
, legend.text = element_text(face="plain", size = fontsize)
, legend.title = element_text(face="plain", size = fontsize)
, strip.background = element_blank()
)
pp
pp2 <- ggplot(snrDataOz,aes(stimDuration, snr, shape=frequency, colour=frequency) )
pp2 <- pp2 + geom_point(
position = position_jitter(w = 0.2, h = 0)
, size = 3
)
pp2 <- pp2 + facet_wrap( ~subject + oddball )
pp2 <- pp2 + geom_smooth(method="lm", aes(fill=frequency), se = F)
pp2 <- pp2 + theme(
panel.background =  element_rect(fill='white')
,panel.grid.major = element_line(colour = "black", size = 0.5, linetype = "dotted")
#   ,panel.grid.minor = element_line(colour = "black", size = 0.5, linetype = "dotted")
#   , panel.grid.major = element_blank() # switch off major gridlines
, panel.grid.minor = element_blank() # switch off minor gridlines
, axis.ticks = element_line(colour = 'black')
, axis.line = element_line(colour = 'black')
, panel.border = theme_border(c("left","bottom"), size=0.25)
, axis.title.y = element_text(face="plain", size = fontsize, angle=90, colour = 'black')
, axis.title.x = element_text(face="plain", size = fontsize, angle=0, colour = 'black')
, axis.text.x = element_text(face="plain", size = fontsize, colour = 'black')
, axis.text.y = element_text(face="plain", size = fontsize, colour = 'black')
, plot.title = element_text(face="plain", size = fontsize, colour = "black")
, legend.text = element_text(face="plain", size = fontsize)
, legend.title = element_text(face="plain", size = fontsize)
, strip.background = element_blank()
)
pp2
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/02-ter-p3Classification/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(ez)
source("d:/KULeuven/PhD/rLibrary/plot_set.R")
for (iS in 1:7)
{
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/02-ter-p3Classification/LinSvm/subject_S%d/Results.txt", iS)
#  filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/02-ter-p3Classification/Blda/subject_S%d/Results.txt", iS)
accData1 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData1$nAverages = as.factor(accData1$nAverages)
accData1 <- subset( accData1, conditionTrain == conditionTest)
accData1$condition = accData1$conditionTrain;
accData1 <- subset(accData1, select = -c(conditionTrain, conditionTest))
accData1 <- subset(accData1, condition != "oddball")
str(accData1)
summary(accData1)
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/02-ter-p3Classification/LinSvmPooled/subject_S%d/Results.txt", iS)
#  filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/02-ter-p3Classification/BldaPooled/subject_S%d/Results.txt", iS)
accData2 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData2$nAverages = as.factor(accData2$nAverages)
accData2$condition = accData2$conditionTest;
accData2 <- subset(accData2, select = -conditionTest)
accData2 <- subset(accData2, condition != "oddball")
#   str(accData2)
#   summary(accData2)
temp1 <- accData1;
temp2 <- accData2;
temp1$classifier <- "normal"
temp2$classifier <- "pooled"
temp <- rbind(temp1, temp2)
temp$classifier = as.factor(temp$classifier)
if (iS == 1) { accData <- temp }
else { accData <- rbind(accData, temp) }
}
accData$condition <- droplevels(accData)$condition
str(accData)
summary(accData)
# graph
fontsize <- 12;
barplot <- ggplot(accData)
barplot <- barplot + geom_point(
aes(nAverages, accuracy, shape=condition, colour=classifier)
, position = position_jitter(w = 0.2, h = 0)
, size = 3
)
barplot <- barplot + facet_wrap( ~subject )
barplot <- barplot + theme(
panel.background =  element_rect(fill='white')
,panel.grid.major = element_line(colour = "black", size = 0.5, linetype = "dotted")
#   ,panel.grid.minor = element_line(colour = "black", size = 0.5, linetype = "dotted")
#   , panel.grid.major = element_blank() # switch off major gridlines
, panel.grid.minor = element_blank() # switch off minor gridlines
, axis.ticks = element_line(colour = 'black')
, axis.line = element_line(colour = 'black')
, panel.border = theme_border(c("left","bottom"), size=0.25)
, axis.title.y = element_text(face="plain", size = fontsize, angle=90, colour = 'black')
, axis.title.x = element_text(face="plain", size = fontsize, angle=0, colour = 'black')
, axis.text.x = element_text(face="plain", size = fontsize, colour = 'black')
, axis.text.y = element_text(face="plain", size = fontsize, colour = 'black')
, plot.title = element_text(face="plain", size = fontsize, colour = "black")
, legend.text = element_text(face="plain", size = fontsize)
, legend.title = element_text(face="plain", size = fontsize)
, strip.background = element_blank()
)
barplot
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(grid)
source("http://egret.psychol.cam.ac.uk/statistics/R/extensions/rnc_ggplot2_border_themes_2013_01.r")
fontsize <- 12;
snrDataOz <- read.csv("snrDatasetOz.csv", header = TRUE)
snrDataOz$frequency = as.factor(snrDataOz$frequency)
snrDataOz$oddball = as.factor(snrDataOz$oddball)
snrDataOz$fileNb = as.factor(snrDataOz$fileNb)
snrDataOz$trial = as.factor(snrDataOz$trial)
# snrDataOz$stimDuration = as.factor(snrDataOz$stimDuration)
str(snrDataOz)
summary(snrDataOz)
# graphs
# fontsize <- 12;
# barplot <- ggplot(snrDataOz)
# barplot <- barplot + geom_point(
#   aes(frequency, snr, shape=subject, colour=oddball)
#   , position = position_jitter(w = 0.2, h = 0)
#   , size = 3
# )
# barplot <- barplot + facet_wrap( ~stimDuration, scale="free_y" )
# barplot <- barplot + theme(
#   panel.background =  element_rect(fill='white')
#   ,panel.grid.major = element_line(colour = "black", size = 0.5, linetype = "dotted")
#   #   ,panel.grid.minor = element_line(colour = "black", size = 0.5, linetype = "dotted")
#   #   , panel.grid.major = element_blank() # switch off major gridlines
#   , panel.grid.minor = element_blank() # switch off minor gridlines
#   , axis.ticks = element_line(colour = 'black')
#   , axis.line = element_line(colour = 'black')
#   , panel.border = theme_border(c("left","bottom"), size=0.25)
#   , axis.title.y = element_text(face="plain", size = fontsize, angle=90, colour = 'black')
#   , axis.title.x = element_text(face="plain", size = fontsize, angle=0, colour = 'black')
#   , axis.text.x = element_text(face="plain", size = fontsize, colour = 'black')
#   , axis.text.y = element_text(face="plain", size = fontsize, colour = 'black')
#   , plot.title = element_text(face="plain", size = fontsize, colour = "black")
#   , legend.text = element_text(face="plain", size = fontsize)
#   , legend.title = element_text(face="plain", size = fontsize)
#   , strip.background = element_blank()
# )
# barplot
pp <- ggplot(snrDataOz,aes(stimDuration, snr, shape=oddball, colour=oddball) )
pp <- pp + geom_point(
position = position_jitter(w = 0.2, h = 0)
, size = 3
)
pp <- pp + facet_wrap( ~subject + frequency, ncol = 4 )
pp <- pp + geom_smooth(method="lm", aes(fill=oddball), se = F)
pp <- pp + theme(
panel.background =  element_rect(fill='white')
,panel.grid.major = element_line(colour = "black", size = 0.5, linetype = "dotted")
#   ,panel.grid.minor = element_line(colour = "black", size = 0.5, linetype = "dotted")
#   , panel.grid.major = element_blank() # switch off major gridlines
, panel.grid.minor = element_blank() # switch off minor gridlines
, axis.ticks = element_line(colour = 'black')
, axis.line = element_line(colour = 'black')
, panel.border = theme_border(c("left","bottom"), size=0.25)
, axis.title.y = element_text(face="plain", size = fontsize, angle=90, colour = 'black')
, axis.title.x = element_text(face="plain", size = fontsize, angle=0, colour = 'black')
, axis.text.x = element_text(face="plain", size = fontsize, colour = 'black')
, axis.text.y = element_text(face="plain", size = fontsize, colour = 'black')
, plot.title = element_text(face="plain", size = fontsize, colour = "black")
, legend.text = element_text(face="plain", size = fontsize)
, legend.title = element_text(face="plain", size = fontsize)
, strip.background = element_blank()
)
pp
pp2 <- ggplot(snrDataOz,aes(stimDuration, snr, shape=frequency, colour=frequency) )
pp2 <- pp2 + geom_point(
position = position_jitter(w = 0.2, h = 0)
, size = 3
)
pp2 <- pp2 + facet_wrap( ~subject + oddball )
pp2 <- pp2 + geom_smooth(method="lm", aes(fill=frequency), se = F)
pp2 <- pp2 + theme(
panel.background =  element_rect(fill='white')
,panel.grid.major = element_line(colour = "black", size = 0.5, linetype = "dotted")
#   ,panel.grid.minor = element_line(colour = "black", size = 0.5, linetype = "dotted")
#   , panel.grid.major = element_blank() # switch off major gridlines
, panel.grid.minor = element_blank() # switch off minor gridlines
, axis.ticks = element_line(colour = 'black')
, axis.line = element_line(colour = 'black')
, panel.border = theme_border(c("left","bottom"), size=0.25)
, axis.title.y = element_text(face="plain", size = fontsize, angle=90, colour = 'black')
, axis.title.x = element_text(face="plain", size = fontsize, angle=0, colour = 'black')
, axis.text.x = element_text(face="plain", size = fontsize, colour = 'black')
, axis.text.y = element_text(face="plain", size = fontsize, colour = 'black')
, plot.title = element_text(face="plain", size = fontsize, colour = "black")
, legend.text = element_text(face="plain", size = fontsize)
, legend.title = element_text(face="plain", size = fontsize)
, strip.background = element_blank()
)
pp2
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(grid)
source("http://egret.psychol.cam.ac.uk/statistics/R/extensions/rnc_ggplot2_border_themes_2013_01.r")
fontsize <- 12;
snrDataOz <- read.csv("snrDatasetOz.csv", header = TRUE)
snrDataOz$frequency = as.factor(snrDataOz$frequency)
snrDataOz$oddball = as.factor(snrDataOz$oddball)
snrDataOz$fileNb = as.factor(snrDataOz$fileNb)
snrDataOz$trial = as.factor(snrDataOz$trial)
# snrDataOz$stimDuration = as.factor(snrDataOz$stimDuration)
str(snrDataOz)
summary(snrDataOz)
# graphs
# fontsize <- 12;
# barplot <- ggplot(snrDataOz)
# barplot <- barplot + geom_point(
#   aes(frequency, snr, shape=subject, colour=oddball)
#   , position = position_jitter(w = 0.2, h = 0)
#   , size = 3
# )
# barplot <- barplot + facet_wrap( ~stimDuration, scale="free_y" )
# barplot <- barplot + theme(
#   panel.background =  element_rect(fill='white')
#   ,panel.grid.major = element_line(colour = "black", size = 0.5, linetype = "dotted")
#   #   ,panel.grid.minor = element_line(colour = "black", size = 0.5, linetype = "dotted")
#   #   , panel.grid.major = element_blank() # switch off major gridlines
#   , panel.grid.minor = element_blank() # switch off minor gridlines
#   , axis.ticks = element_line(colour = 'black')
#   , axis.line = element_line(colour = 'black')
#   , panel.border = theme_border(c("left","bottom"), size=0.25)
#   , axis.title.y = element_text(face="plain", size = fontsize, angle=90, colour = 'black')
#   , axis.title.x = element_text(face="plain", size = fontsize, angle=0, colour = 'black')
#   , axis.text.x = element_text(face="plain", size = fontsize, colour = 'black')
#   , axis.text.y = element_text(face="plain", size = fontsize, colour = 'black')
#   , plot.title = element_text(face="plain", size = fontsize, colour = "black")
#   , legend.text = element_text(face="plain", size = fontsize)
#   , legend.title = element_text(face="plain", size = fontsize)
#   , strip.background = element_blank()
# )
# barplot
pp <- ggplot(snrDataOz,aes(stimDuration, snr, shape=oddball, colour=oddball) )
pp <- pp + geom_point(
position = position_jitter(w = 0.2, h = 0)
, size = 3
)
pp <- pp + facet_wrap( ~subject + frequency, ncol = 4 )
pp <- pp + geom_smooth(method="lm", aes(fill=oddball), se = F)
pp <- pp + theme(
panel.background =  element_rect(fill='white')
,panel.grid.major = element_line(colour = "black", size = 0.5, linetype = "dotted")
#   ,panel.grid.minor = element_line(colour = "black", size = 0.5, linetype = "dotted")
#   , panel.grid.major = element_blank() # switch off major gridlines
, panel.grid.minor = element_blank() # switch off minor gridlines
, axis.ticks = element_line(colour = 'black')
, axis.line = element_line(colour = 'black')
, panel.border = theme_border(c("left","bottom"), size=0.25)
, axis.title.y = element_text(face="plain", size = fontsize, angle=90, colour = 'black')
, axis.title.x = element_text(face="plain", size = fontsize, angle=0, colour = 'black')
, axis.text.x = element_text(face="plain", size = fontsize, colour = 'black')
, axis.text.y = element_text(face="plain", size = fontsize, colour = 'black')
, plot.title = element_text(face="plain", size = fontsize, colour = "black")
, legend.text = element_text(face="plain", size = fontsize)
, legend.title = element_text(face="plain", size = fontsize)
, strip.background = element_blank()
)
pp
pp2 <- ggplot(snrDataOz,aes(stimDuration, snr, shape=frequency, colour=frequency) )
pp2 <- pp2 + geom_point(
position = position_jitter(w = 0.2, h = 0)
, size = 3
)
pp2 <- pp2 + facet_wrap( ~oddball + subject )
pp2 <- pp2 + geom_smooth(method="lm", aes(fill=frequency), se = F)
pp2 <- pp2 + theme(
panel.background =  element_rect(fill='white')
,panel.grid.major = element_line(colour = "black", size = 0.5, linetype = "dotted")
#   ,panel.grid.minor = element_line(colour = "black", size = 0.5, linetype = "dotted")
#   , panel.grid.major = element_blank() # switch off major gridlines
, panel.grid.minor = element_blank() # switch off minor gridlines
, axis.ticks = element_line(colour = 'black')
, axis.line = element_line(colour = 'black')
, panel.border = theme_border(c("left","bottom"), size=0.25)
, axis.title.y = element_text(face="plain", size = fontsize, angle=90, colour = 'black')
, axis.title.x = element_text(face="plain", size = fontsize, angle=0, colour = 'black')
, axis.text.x = element_text(face="plain", size = fontsize, colour = 'black')
, axis.text.y = element_text(face="plain", size = fontsize, colour = 'black')
, plot.title = element_text(face="plain", size = fontsize, colour = "black")
, legend.text = element_text(face="plain", size = fontsize)
, legend.title = element_text(face="plain", size = fontsize)
, strip.background = element_blank()
)
pp2
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/02-ter-p3Classification/")
rm(list = ls())
library(ggplot2)
library(lme4)
library(LMERConvenienceFunctions)
library(languageR)
source("createDataFrame.R")
source("cleanPlot.R")
#################################################################################################################
accData1 <- subset(accData, classifier=="normal")
accData1 <- subset(accData1, select = -c(classifier, foldTest))
str(accData1)
summary(accData1)
#################################################################################################################
pp <- ggplot( accData1, aes(nRep, correctness, colour=condition, shape=condition) )
pp <- pp + stat_summary(fun.y = mean, geom="point",  position = position_jitter(w = 0.2, h = 0), size = 3)
# pp <- pp + stat_summary(fun.y = mean, geom="point", position = position_dodge(.5))
# pp <- pp + stat_summary(fun.data = mean_cl_normal, geom = "pointrange", width = 0.2, position = position_dodge(.5), size = 1)
pp <- pp + facet_wrap( ~subject )
pp <- cleanPlot(pp)
pp <- pp + theme(legend.position=c(0.8334,0.1667))
pp
#################################################################################################################
f0Vs857_10_12_15    = c(-4, 1, 1, 1, 1)     # oddball vs. hybrid
f857Vs10_12_15      = c(0, -3, 1, 1, 1)     # hybrid-8-57Hz vs. hybrid-10-12-15-Hz
f10Vs12_15          = c(0, 0, -2, 1, 1)     # hybrid-10Hz vs. hybrid-12-15-Hz
f12Vs15             = c(0, 0, 0, -1, 1)     # hybrid-12Hz vs. hybrid-15-Hz
contrasts(accData1$frequency) <- cbind(
f0Vs857_10_12_15
, f857Vs10_12_15
, f10Vs12_15
, f12Vs15
)
#################################################################################################################
# lmH4 <- lmer( correctness ~ nRep*frequency + ( correctness | subject ), data = accData1, family = binomial )
# lmH3 <- lmer( correctness ~ nRep*frequency + ( 1 | subject ), data = accData1, family = binomial )
# lmH2 <- lmer( correctness ~ nRep + frequency + ( 1 | subject ), data = accData1, family = binomial )
# lmH1a <- lmer( correctness ~ nRep + ( 1 | subject ), data = accData1, family = binomial )
# lmH1b <- lmer( correctness ~ frequency + ( 1 | subject ), data = accData1, family = binomial )
# lmH0 <- lmer( correctness ~ ( 1 | subject ), data = accData1, family = binomial )
#
# anova( lmH0, lmH1a, lmH2, lmH3 ) #, lmH4 )
# anova( lmH0, lmH1b, lmH2, lmH3 ) #, lmH4 )
#################################################################################################################
accData1$nRepFac <- as.factor(accData1$nRep)
lmH3 <- lmer( correctness ~ frequency * nRepFac + ( 1 | subject/nRepFac ), data = accData1, family = binomial )
lmH2 <- lmer( correctness ~ frequency + nRepFac + ( 1 | subject/nRepFac ), data = accData1, family = binomial )
lmH1a <- lmer( correctness ~ frequency + ( 1 | subject/nRepFac ), data = accData1, family = binomial )
lmH1b <- lmer( correctness ~ nRepFac + ( 1 | subject/nRepFac ), data = accData1, family = binomial )
lmH0 <- lmer( correctness ~ ( 1 | subject/nRepFac ), data = accData1, family = binomial )
anova( lmH0, lmH1a, lmH2, lmH3 ) #, lmH4 )
anova( lmH0, lmH1b, lmH2, lmH3 ) #, lmH4 )
