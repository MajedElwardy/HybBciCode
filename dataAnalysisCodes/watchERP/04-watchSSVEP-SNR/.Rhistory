demo()
install.packages()
cd
ls
politeness <- read.csv(file.choose( ))
politeness2 <- read.csv(file."d:\KULeuven\PhD\Courses-Tutorial\R-statistics\linearMixedModelWithR\politeness_data.csv");
politeness2 <- read.csv(file."d:/KULeuven/PhD/Courses-Tutorial/R-statistics/linearMixedModelWithR/politeness_data.csv");
politeness2 <- read.csv(file="d:/KULeuven/PhD/Courses-Tutorial/R-statistics/linearMixedModelWithR/politeness_data.csv");
rm(list=ls())
politeness <- read.csv(file="d:/KULeuven/PhD/Courses-Tutorial/R-statistics/linearMixedModelWithR/politeness_data.csv");
head()
head(politeness)
View(politeness)
View(politeness)
summary(politeness)
str(politeness)
colnames(politeness)
which(is.na(politeness)==T)
View(politeness)
boxplot(frequency ~ attitude, data=politeness)
#median(politeness[which(politeness$attitude=="pol"),]$frequency, na.rm=T)
T
#which(is.na(politeness)==T)
median(politeness[which(politeness$attitude=="pol"),]$frequency, na.rm=T)
library(lme4);library(languageR);
rm(list=ls());
politeness <- read.csv(file="d:/KULeuven/PhD/Courses-Tutorial/R-statistics/linearMixedModelWithR/politeness_data.csv");
#which(is.na(politeness)==T)
boxplot(frequency ~ attitude, data=politeness)
median(politeness[which(politeness$attitude=="pol"),]$frequency, na.rm=T)
median(politeness[which(politeness$attitude=="inf"),]$frequency)
boxplot(frequency ~ attitude*gender, data=politeness)
View(politeness)
View(politeness)
lmer(frequency ~ attitude, data=politeness)
politeness.model = lmer(frequency ~ attitude + (1|subject) + (1|scenario), data=politeness)
politeness.model
politeness.model.p = pvals.fnc(politeness.model)
politeness.model.p
View(politeness)
mean(politeness$frequency, na.rm=T)
mean(politeness[which(politeness$gender == "F"),]$frequency)
mean(politeness[which(politeness$gender == "M"),]$frequency)
mean(politeness[which(politeness$gender == "M"),]$frequency, na.rm=T)
politeness.model = lmer(frequency ~ attitude*gender + (1|subject) + (1|scenario), data=politeness)
politeness.model.p = pvals.fnc(politeness.model)
politeness.model.p
plot(fitted(politeness.model),residuals(politeness.model))
politeness.null = lmer(frequency ~ 1 + (1|subject) + (1|scenario), data=politeness)
anova(politeness.model, politeness.null)
??read
test <- scan(file="accuracyDataset.txt")
test <- scan(file="d:\KULeuven\PhD\Work\PatientStudy\statisticLME\accuracyDataset.txt")
test <- scan(file="d:/KULeuven/PhD/Work/PatientStudy/statisticLME/accuracyDataset.txt")
test <- read.table("d:/KULeuven/PhD/Work/PatientStudy/statisticLME/accuracyDataset.txt", header = TRUE, row.names = 1)
test <- read.table("d:/KULeuven/PhD/Work/PatientStudy/statisticLME/accuracyDataset.txt", header = TRUE)
View(test)
rm(list=ls());
accDataset <- read.table("d:/KULeuven/PhD/Work/PatientStudy/statisticLME/accuracyDataset.txt", header = TRUE)
boxplot(accuracy ~ system, data=accDataset)
boxplot(accuracy ~ system*timePerSymbol, data=accDataset)
View(accDataset)
View(accDataset)
accDataset.model = lmer(accuracy ~ system + (1|subject) + (1|timePerSymbol), data=accDataset)
accDataset.model.p = pvals.fnc(accDataset.model)
accDataset.model.p
accDataset.model = lmer(accuracy ~ system + (1|subject), data=accDataset)
accDataset.model.p = pvals.fnc(accDataset.model)
accDataset.model.p
accDataset.model = lmer(accuracy ~ system*timePerSymbol + (1|subject), data=accDataset)
accDataset.model.p = pvals.fnc(accDataset.model)
accDataset.model.p
library(lme4);library(languageR);
rm(list=ls());
accDataset <- read.table("d:/KULeuven/PhD/Work/PatientStudy/statisticLME/accuracyDataset.txt", header = TRUE)
boxplot(accuracy ~ system, data=accDataset)
boxplot(accuracy ~ system*timePerSymbol, data=accDataset)
accDataset.model = lmer(accuracy ~ system + (1|subject), data=accDataset)
accDataset.model.p = pvals.fnc(accDataset.model)
accDataset.model.p
accDataset.model = lmer(accuracy ~ system + (1|subject) + (1|timePerSymbol), data=accDataset)
accDataset.model.p = pvals.fnc(accDataset.model)
accDataset.model.p
accDataset.model = lmer(accuracy ~ system*timePerSymbol + (1|subject), data=accDataset)
accDataset.model.p = pvals.fnc(accDataset.model)
accDataset.model.p
View(accDataset)
View(accDataset)
library(lme4)
library(lme4)
str(Dyestuff)
head(Dyestuff)
summary(Dyestuff)
print(dotplot(reorder(Batch, Yield) ~ Yield, Dyestuff,
ylab = "Batch", jitter.y = TRUE, pch = 21,
xlab = "Yield of dyestuff (grams of standard color)",
type = c("p", "a")))
library(lme4);library(languageR);
rm(list=ls());
politeness <- read.csv(file="d:/KULeuven/PhD/Courses-Tutorial/R-statistics/linearMixedModelWithR/politeness_data.csv");
politeness <- read.csv(file="d:\KULeuven\PhD\Statistics\LMEStuffs\Winter (2011) A very basic tutorial for performing linear mixed effects analyses\politeness_data.csv");
politeness <- read.csv(file="d:/KULeuven/PhD/Statistics/LMEStuffs/Winter (2011) A very basic tutorial for performing linear mixed effects analyses/politeness_data.csv");
head()
head(politeness)
summary(politeness)
str(politeness)
colnamesstr(politeness)
colnames(politeness)
which(is.na(politeness)==T)
View(politeness)
56*4
56*4+39
clc
source('D:/KULeuven/PhD/Statistics/LMEStuffs/Winter (2011) A very basic tutorial for performing linear mixed effects analyses/RScriptLMM.R')
source('D:/KULeuven/PhD/Statistics/LMEStuffs/Winter (2011) A very basic tutorial for performing linear mixed effects analyses/RScriptLMM.R')
fix(politeness.model)
summary(politeness)
boxplot(frequency ~ attitude, data=politeness)
rm(list=ls());
politeness <- read.csv(file="d:/KULeuven/PhD/Statistics/LMEStuffs/Winter (2011) A very basic tutorial for performing linear mixed effects analyses/politeness_data.csv");
boxplot(frequency ~ attitude, data=politeness)
median(politeness[which(politeness$attitude=="pol"),]$frequency, na.rm=T)
median(politeness[which(politeness$attitude=="pol"),]$frequency, na.rm=T)
median(politeness[which(politeness$attitude=="inf"),]$frequency)
boxplot(frequency ~ attitude*gender, data=politeness)
politeness.model = lmer(frequency ~ attitude + (1|subject) + (1|scenario), data=politeness)
politeness.model
14.544^2
politeness.model.p = pvals.fnc(politeness.model)
politeness.model.p
mean(politeness$frequency, na.rm=T)
mean(politeness[which(politeness$gender == "F"),]$frequency)
mean(politeness[which(politeness$gender == "M"),]$frequency)
mean(politeness[which(politeness$gender == "M"),]$frequency, na.rm=T)
politeness.model = lmer(frequency ~ attitude*gender + (1|subject) + (1|scenario), data=politeness)
politeness.model
politeness.model.p = pvals.fnc(politeness.model)
politeness.model.p
plot(fitted(politeness.model),residuals(politeness.model))
example3 <- read.table("http://www.unt.edu/rss/class/Jon/R_SC/Module3/ExampleData3.txt", header=TRUE, sep="", na.strings="NA", dec=".", strip.white=TRUE)
summary(example3)
head(example3, 15)
attributes(example3)
library(lme4)
?lme4
?lmer
(1997). The data frame contains measurements of heart and body weight
install.packages("tools")
install.packages("stringr")
install.packages("tools")
install.packages("patchDVI", repos="http://R-Forge.R-project.org")
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/")
rm(list = ls())
library(ggplot2)
library(reshape2)
snrDataOz <- read.csv("snrDatasetOz.csv", header = TRUE)
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/")
rm(list = ls())
library(ggplot2)
library(reshape2)
snrDataOz <- read.csv("snrDatasetOz.csv", header = TRUE)
str(snrDataOz)
summary(snrDataOz)
?as
snrDataOz$frequency = as.factor(snrDataOz$frequency)
snrDataOz$oddball = as.factor(snrDataOz$oddball)
snrDataOz$fileNb = as.factor(snrDataOz$fileNb)
snrDataOz$trial = as.factor(snrDataOz$trial)
snrDataOz$stimDuration = as.factor(snrDataOz$stimDuration)
str(snrDataOz)
summary(snrDataOz)
dataS1 = subset( snrDataOz, subject = "S1" )
View(dataS1)
View(snrDataOz)
dataS1 = subset( snrDataOz, subject == "S1" )
str(dataS1)
summary(dataS1)
dataS1 = subset( dataS1, select != "subject")
dataS1 = subset( dataS1, select = "subject")
dataS1 = subset( snrDataOz, subject == "S1", select = c("frequency", "oddball", "snr") )
str(dataS1)
summary(dataS1)
dataS1 = subset( snrDataOz, subject == "S1", select = c("frequency", "oddball", "stimDuration", "snr") )
str(dataS1)
summary(dataS1)
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/")
rm(list = ls())
library(ggplot2)
library(reshape2)
snrDataOz <- read.csv("snrDatasetOz.csv", header = TRUE)
snrDataOz$frequency = as.factor(snrDataOz$frequency)
snrDataOz$oddball = as.factor(snrDataOz$oddball)
snrDataOz$fileNb = as.factor(snrDataOz$fileNb)
snrDataOz$trial = as.factor(snrDataOz$trial)
snrDataOz$stimDuration = as.factor(snrDataOz$stimDuration)
str(snrDataOz)
summary(snrDataOz)
dataS1 = subset( snrDataOz, subject == "S1", stimDuration == "14", select = c("frequency", "oddball", "snr") )
str(dataS1)
summary(dataS1)
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/")
rm(list = ls())
library(ggplot2)
library(reshape2)
snrDataOz <- read.csv("snrDatasetOz.csv", header = TRUE)
snrDataOz$frequency = as.factor(snrDataOz$frequency)
snrDataOz$oddball = as.factor(snrDataOz$oddball)
snrDataOz$fileNb = as.factor(snrDataOz$fileNb)
snrDataOz$trial = as.factor(snrDataOz$trial)
snrDataOz$stimDuration = as.factor(snrDataOz$stimDuration)
str(snrDataOz)
summary(snrDataOz)
dataS1 = subset( snrDataOz, subject == "S1", stimDuration == "14", select = c("frequency", "oddball", "snr") )
dataS1 = subset( snrDataOz, subject == "S1", select = c("frequency", "oddball", "snr") )
dataS1 = subset( snrDataOz, stimDuration == "14" )
str(dataS1)
summary(dataS1)
dataS1 = subset( snrDataOz, subject == "S1", select = c("frequency", "oddball", "snr") )
dataS1 = subset( dataS1, stimDuration == "14" )
str(dataS1)
summary(dataS1)
dataS1 = subset( snrDataOz, subject == "S1", select = c("frequency", "oddball", "stimDuration", "snr") )
str(dataS1)
summary(dataS1)
dataS1 = subset( snrDataOz, subject == "S1", select = c("frequency", "oddball", "stimDuration", "snr") )
dataS1 = subset( dataS1, stimDuration == "14", select = -"stimDuration" )
dataS1 = subset( dataS1, stimDuration == "14", select = -stimDuration )
str(dataS1)
summary(dataS1)
pp <- ggplot( dataS1 ) + geom_point( aes(frequency, snr, shape=oddball, colour=oddball) )
pp
pp <- ggplot( dataS1 ) + geom_point( aes(frequency, snr, shape=oddball, colour=oddball), position = position_jitter(w = 0.1, h = 0)  )
pp
gpBoxplot <- ggplot(dataS1)
gpBoxplot +
geom_boxplot(aes(x=frequency, y=snr, fill=oddball), position = position_dodge(width = .9), width=.7) +
labs(x="", y="") +
scale_fill_grey(start = 0.8, end = 0.4) +
scale_y_continuous(limits=c(0, 100), expand = c(0,0), breaks=10*0:100) +
gpBoxplot <- ggplot(dataS1)
gpBoxplot +
geom_boxplot(aes(x=frequency, y=snr, fill=oddball), position = position_dodge(width = .9), width=.7) +
labs(x="", y="") +
scale_fill_grey(start = 0.8, end = 0.4) +
scale_y_continuous(limits=c(0, 100), expand = c(0,0), breaks=10*0:100)
gpBoxplot <- ggplot(dataS1)
gpBoxplot +
geom_boxplot(aes(x=frequency, y=snr, fill=oddball), position = position_dodge(width = .9), width=.7)
gpBoxplot <- ggplot(dataS1)
gpBoxplot +
geom_boxplot(aes(x=frequency, y=snr, fill=oddball), position = position_dodge(width = .9), width=.7) +
labs(x="", y="") +
scale_fill_grey(start = 0.8, end = 0.4)
gpBoxplot <- ggplot(dataS1)
gpBoxplot +
geom_boxplot(aes(x=frequency, y=snr, fill=oddball), position = position_dodge(width = .9), width=.7) +
scale_fill_grey(start = 0.8, end = 0.4)
str(dataS1)
summary(dataS1)
