#               , psdData
#               , REML = FALSE
# )
# fm1c <- lmer( psd ~ ((stimDuration+I(stimDuration^2))*frequency)+oddball
#               + ((stimDuration+I(stimDuration^2))|subject/trialInSub)
#               , psdData
#               , REML = FALSE
# )
fm1d <- lmer( psd ~ (stimDuration+I(stimDuration^2))*frequency
+ ((stimDuration+I(stimDuration^2))|subject/trialInSub)
, psdData
, REML = FALSE
)
# anova(fm1z, fm1a, fm1b, fm1c, fm1d)
anova(fm1a, fm1d)
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(grid)
source("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/deps/cleanPlot.R")
source("createSnrDatasetFnc.R")
# subsetChLabel <- c("ch-O", "ch-PO-O", "ch-P-PO-O", "ch-CP-P-PO-O", "ch-C-CP-P-PO-O", "ch-all")
# harmonicsLabel <- c("fund","fund-ha1")
subsetChLabel <- c("ch-P-PO-O")
harmonicsLabel <- c("fund-ha1")
snrData <- createSnrDatasetFnc(subsetChLabel, harmonicsLabel)
snrData <- snrData[snrData$watchedFrequency == snrData$targetFrequency,]
snrData$trialInSub <- snrData$run : snrData$roundNb
str(snrData)
#############################################################################################################
#############################################################################################################
pp <- ggplot( snrData, aes(time, snr, colour=oddball ) )
pp <- pp + stat_summary(fun.data = mean_cl_normal, geom="pointrange", position = position_dodge(0.2))
pp <- pp + stat_summary(fun.y = mean, geom="line", aes(group=oddball), position = position_dodge(0.2))
pp <- pp + facet_wrap( ~targetFrequency )
pp <- cleanPlot(pp)
print(pp)
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(grid)
source("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/deps/cleanPlot.R")
source("createSnrDatasetFnc.R")
# subsetChLabel <- c("ch-O", "ch-PO-O", "ch-P-PO-O", "ch-CP-P-PO-O", "ch-C-CP-P-PO-O", "ch-all")
# harmonicsLabel <- c("fund","fund-ha1")
subsetChLabel <- c("ch-P-PO-O")
harmonicsLabel <- c("fund-ha1")
snrData <- createSnrDatasetFnc(subsetChLabel, harmonicsLabel)
snrData <- snrData[snrData$watchedFrequency == snrData$targetFrequency,]
snrData$trialInSub <- snrData$run : snrData$roundNb
str(snrData)
#############################################################################################################
#############################################################################################################
pp <- ggplot( snrData, aes(time, snr, colour=oddball ) )
pp <- pp + stat_summary(fun.data = mean_cl_normal, geom="pointrange", position = position_dodge(0.2))
pp <- pp + stat_summary(fun.y = mean, geom="line", aes(group=oddball), position = position_dodge(0.2))
pp <- pp + facet_wrap( ~targetFrequency )
pp <- cleanPlot(pp)
print(pp)
pp2 <- pp + facet_wrap( ~subject )
print(pp2)
pp3 <- pp + facet_grid( targetFrequency~subject )
print(pp3)
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(grid)
source("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/deps/cleanPlot.R")
source("createSnrDatasetFnc.R")
# subsetChLabel <- c("ch-O", "ch-PO-O", "ch-P-PO-O", "ch-CP-P-PO-O", "ch-C-CP-P-PO-O", "ch-all")
# harmonicsLabel <- c("fund","fund-ha1")
subsetChLabel <- c("ch-O")
harmonicsLabel <- c("fund-ha1")
snrData <- createSnrDatasetFnc(subsetChLabel, harmonicsLabel)
snrData <- snrData[snrData$watchedFrequency == snrData$targetFrequency,]
snrData$trialInSub <- snrData$run : snrData$roundNb
str(snrData)
#############################################################################################################
#############################################################################################################
pp <- ggplot( snrData, aes(time, snr, colour=oddball ) )
pp <- pp + stat_summary(fun.data = mean_cl_normal, geom="pointrange", position = position_dodge(0.2))
pp <- pp + stat_summary(fun.y = mean, geom="line", aes(group=oddball), position = position_dodge(0.2))
pp <- pp + facet_wrap( ~targetFrequency )
pp <- cleanPlot(pp)
print(pp)
pp2 <- pp + facet_wrap( ~subject )
print(pp2)
pp3 <- pp + facet_grid( targetFrequency~subject )
print(pp3)
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(grid)
source("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/deps/cleanPlot.R")
source("createSnrDatasetFnc.R")
# subsetChLabel <- c("ch-O", "ch-PO-O", "ch-P-PO-O", "ch-CP-P-PO-O", "ch-C-CP-P-PO-O", "ch-all")
# harmonicsLabel <- c("fund","fund-ha1")
subsetChLabel <- c("ch-PO-O")
harmonicsLabel <- c("fund-ha1")
snrData <- createSnrDatasetFnc(subsetChLabel, harmonicsLabel)
snrData <- snrData[snrData$watchedFrequency == snrData$targetFrequency,]
snrData$trialInSub <- snrData$run : snrData$roundNb
str(snrData)
#############################################################################################################
#############################################################################################################
pp <- ggplot( snrData, aes(time, snr, colour=oddball ) )
pp <- pp + stat_summary(fun.data = mean_cl_normal, geom="pointrange", position = position_dodge(0.2))
pp <- pp + stat_summary(fun.y = mean, geom="line", aes(group=oddball), position = position_dodge(0.2))
pp <- pp + facet_wrap( ~targetFrequency )
pp <- cleanPlot(pp)
print(pp)
pp2 <- pp + facet_wrap( ~subject )
print(pp2)
pp3 <- pp + facet_grid( targetFrequency~subject )
print(pp3)
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(grid)
source("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/deps/cleanPlot.R")
source("createSnrDatasetFnc.R")
# subsetChLabel <- c("ch-O", "ch-PO-O", "ch-P-PO-O", "ch-CP-P-PO-O", "ch-C-CP-P-PO-O", "ch-all")
# harmonicsLabel <- c("fund","fund-ha1")
subsetChLabel <- c("ch-CP-P-PO-O")
harmonicsLabel <- c("fund-ha1")
snrData <- createSnrDatasetFnc(subsetChLabel, harmonicsLabel)
snrData <- snrData[snrData$watchedFrequency == snrData$targetFrequency,]
snrData$trialInSub <- snrData$run : snrData$roundNb
str(snrData)
#############################################################################################################
#############################################################################################################
pp <- ggplot( snrData, aes(time, snr, colour=oddball ) )
pp <- pp + stat_summary(fun.data = mean_cl_normal, geom="pointrange", position = position_dodge(0.2))
pp <- pp + stat_summary(fun.y = mean, geom="line", aes(group=oddball), position = position_dodge(0.2))
pp <- pp + facet_wrap( ~targetFrequency )
pp <- cleanPlot(pp)
print(pp)
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(grid)
source("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/deps/cleanPlot.R")
source("createSnrDatasetFnc.R")
# subsetChLabel <- c("ch-O", "ch-PO-O", "ch-P-PO-O", "ch-CP-P-PO-O", "ch-C-CP-P-PO-O", "ch-all")
# harmonicsLabel <- c("fund","fund-ha1")
subsetChLabel <- c("ch-C-CP-P-PO-O")
harmonicsLabel <- c("fund-ha1")
snrData <- createSnrDatasetFnc(subsetChLabel, harmonicsLabel)
snrData <- snrData[snrData$watchedFrequency == snrData$targetFrequency,]
snrData$trialInSub <- snrData$run : snrData$roundNb
str(snrData)
#############################################################################################################
#############################################################################################################
pp <- ggplot( snrData, aes(time, snr, colour=oddball ) )
pp <- pp + stat_summary(fun.data = mean_cl_normal, geom="pointrange", position = position_dodge(0.2))
pp <- pp + stat_summary(fun.y = mean, geom="line", aes(group=oddball), position = position_dodge(0.2))
pp <- pp + facet_wrap( ~targetFrequency )
pp <- cleanPlot(pp)
print(pp)
pp2 <- pp + facet_wrap( ~subject )
print(pp2)
pp3 <- pp + facet_grid( targetFrequency~subject )
print(pp3)
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(grid)
source("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/deps/cleanPlot.R")
source("createSnrDatasetFnc.R")
# subsetChLabel <- c("ch-O", "ch-PO-O", "ch-P-PO-O", "ch-CP-P-PO-O", "ch-C-CP-P-PO-O", "ch-all")
# harmonicsLabel <- c("fund","fund-ha1")
subsetChLabel <- c("ch-all")
harmonicsLabel <- c("fund-ha1")
snrData <- createSnrDatasetFnc(subsetChLabel, harmonicsLabel)
snrData <- snrData[snrData$watchedFrequency == snrData$targetFrequency,]
snrData$trialInSub <- snrData$run : snrData$roundNb
str(snrData)
#############################################################################################################
#############################################################################################################
pp <- ggplot( snrData, aes(time, snr, colour=oddball ) )
pp <- pp + stat_summary(fun.data = mean_cl_normal, geom="pointrange", position = position_dodge(0.2))
pp <- pp + stat_summary(fun.y = mean, geom="line", aes(group=oddball), position = position_dodge(0.2))
pp <- pp + facet_wrap( ~targetFrequency )
pp <- cleanPlot(pp)
print(pp)
pp2 <- pp + facet_wrap( ~subject )
print(pp2)
pp3 <- pp + facet_grid( targetFrequency~subject )
print(pp3)
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-PSD/lme4Scripts/")
# detach("package:nlme", unload=TRUE)
source("initData.R")
library(lme4)
library(LMERConvenienceFunctions)
library(languageR)
# psdData <- psdData[psdData$stimDuration != 1, ]
# psdData$stimDuration <- psdData$stimDuration-1
##############################################################################################
##############################################################################################
pp2 <- ggplot( psdData, aes(stimDuration, psd, colour=oddball) )
pp2 <- pp2 + geom_point() + geom_line( aes(stimDuration, psd, group=trialInSubAndFreq) )
pp2 <- pp2 + facet_grid( subject~frequency, scales="free" )
pp2 <- cleanPlot(pp2)
pp2
pp3 <- ggplot( psdData, aes(stimDuration, psd, colour=subject) )
pp3 <- pp3 + geom_point() + geom_line(aes(stimDuration, psd, group=trial))# aes(stimDuration, psd, group=trialInSubAndFreqAndCond) )
pp3 <- pp3 + facet_grid( oddball~frequency, scales="free" )
pp3 <- cleanPlot(pp3)
pp3
##############################################V################################################
##############################################################################################
# fm1 <- lmer( psd ~ (stimDuration+I(stimDuration^2))*frequency*oddball
#              + (stimDuration+I(stimDuration^2)|subject/trialInSub)
#              , psdData
#              , REML = TRUE
# )
#
# fm1 <- lmer( psd ~ (stimDuration+I(stimDuration^2))*frequency*oddball
#              + (stimDuration+I(stimDuration^2)|subject/trialInSub)
#              , psdData
#              , REML = FALSE
# )
#
# fm0 <- lmer( psd ~ (stimDuration+I(stimDuration^2))*frequency
#              + (stimDuration+I(stimDuration^2)|subject/trialInSub)
#              , psdData
#              , REML = FALSE
# )
#
# fm2 <- lmer( psd ~ (stimDuration+I(stimDuration^2))*frequency*oddball
#              + ((stimDuration+I(stimDuration^2))|subject/frequency/trialInSubAndFreq)
#              , psdData
#              , REML = TRUE
# )
#
# fm3a <- lmer( psd ~ (stimDuration+I(stimDuration^2))*frequency*oddball
#               + ((stimDuration+I(stimDuration^2))|subject/frequency/trialInSubAndFreq)
#               , psdData
#               , REML = FALSE
# )
# fm3b <- lmer( psd ~ (stimDuration+I(stimDuration^2))*oddball
#               + ((stimDuration+I(stimDuration^2))|subject/frequency/trialInSubAndFreq)
#               , psdData
#               , REML = FALSE
# )
# fm1z <- lmer( psd ~ (stimDuration+I(stimDuration^2)+I(stimDuration^3))*frequency*oddball
#               + ((stimDuration+I(stimDuration^2))|subject/trialInSub)
#               , psdData
#               , REML = FALSE
# )
#
# fm1z1 <- lmer( psd ~ (stimDuration+I(stimDuration^2)+I(stimDuration^3))*frequency*oddball
#               + ((stimDuration+I(stimDuration^2))|subject/trialInSub)
#               , psdData
#               , REML = TRUE
# )
# fm1z2 <- lmer( psd ~ (stimDuration+I(stimDuration^2)+I(stimDuration^3))*frequency*oddball
#               + ((stimDuration+I(stimDuration^2)+I(stimDuration^3))|subject/trialInSub)
#               , psdData
#               , REML = TRUE
# )
fm1a <- lmer( psd ~ (stimDuration+I(stimDuration^2))*frequency*oddball
+ ((stimDuration+I(stimDuration^2))|subject/trialInSub)
, psdData
, REML = FALSE
)
# fm1b <- lmer( psd ~ ((stimDuration+I(stimDuration^2))+frequency+oddball)^2
#               + ((stimDuration+I(stimDuration^2))|subject/trialInSub)
#               , psdData
#               , REML = FALSE
# )
# fm1c <- lmer( psd ~ ((stimDuration+I(stimDuration^2))*frequency)+oddball
#               + ((stimDuration+I(stimDuration^2))|subject/trialInSub)
#               , psdData
#               , REML = FALSE
# )
fm1d <- lmer( psd ~ (stimDuration+I(stimDuration^2))*frequency
+ ((stimDuration+I(stimDuration^2))|subject/trialInSub)
, psdData
, REML = FALSE
)
# anova(fm1z, fm1a, fm1b, fm1c, fm1d)
anova(fm1a, fm1d)
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-PSD/lme4Scripts/")
# detach("package:nlme", unload=TRUE)
source("initDataWithHa.R")
library(lme4)
library(LMERConvenienceFunctions)
library(languageR)
# psdData <- psdData[psdData$stimDuration != 1, ]
# psdData$stimDuration <- psdData$stimDuration-1
##############################################################################################
##############################################################################################
pp2 <- ggplot( psdData, aes(stimDuration, psd, colour=oddball) )
pp2 <- pp2 + geom_point() + geom_line( aes(stimDuration, psd, group=trialInSubAndFreq) )
pp2 <- pp2 + facet_grid( subject~frequency*harmonic, scales="free" )
pp2 <- cleanPlot(pp2)
pp2
pp2b <- ggplot( psdData, aes(stimDuration, psd, colour=oddball) )
pp2b <- pp2b + stat_summary(fun.data=mean_cl_normal, geom="pointrange", aes(stimDuration, psd, group=oddball))
# pp2b <- pp2b + geom_point() + geom_line( aes(stimDuration, psd, group=trialInSubAndFreq) )
pp2b <- pp2b + facet_grid( subject~frequency*harmonic, scales="free" )
pp2b <- cleanPlot(pp2b)
pp2b
##############################################V################################################
##############################################################################################
# fm1 <- lmer( psd ~ (stimDuration+I(stimDuration^2))*frequency*oddball
#              + (stimDuration+I(stimDuration^2)|subject/trialInSub)
#              , psdData
#              , REML = TRUE
# )
#
# fm1 <- lmer( psd ~ (stimDuration+I(stimDuration^2))*frequency*oddball
#              + (stimDuration+I(stimDuration^2)|subject/trialInSub)
#              , psdData
#              , REML = FALSE
# )
#
# fm0 <- lmer( psd ~ (stimDuration+I(stimDuration^2))*frequency
#              + (stimDuration+I(stimDuration^2)|subject/trialInSub)
#              , psdData
#              , REML = FALSE
# )
#
# fm2 <- lmer( psd ~ (stimDuration+I(stimDuration^2))*frequency*oddball
#              + ((stimDuration+I(stimDuration^2))|subject/frequency/trialInSubAndFreq)
#              , psdData
#              , REML = TRUE
# )
#
# fm3a <- lmer( psd ~ (stimDuration+I(stimDuration^2))*frequency*oddball
#               + ((stimDuration+I(stimDuration^2))|subject/frequency/trialInSubAndFreq)
#               , psdData
#               , REML = FALSE
# )
# fm3b <- lmer( psd ~ (stimDuration+I(stimDuration^2))*oddball
#               + ((stimDuration+I(stimDuration^2))|subject/frequency/trialInSubAndFreq)
#               , psdData
#               , REML = FALSE
# )
fm1a <- lmer( psd ~ (stimDuration+I(stimDuration^2))*frequency*oddball
+ ((stimDuration+I(stimDuration^2))|subject/trialInSub)
, psdData
, REML = FALSE
)
# fm1b <- lmer( psd ~ ((stimDuration+I(stimDuration^2))+frequency+oddball)^2
#               + ((stimDuration+I(stimDuration^2))|subject/trialInSub)
#               , psdData
#               , REML = FALSE
# )
# fm1c <- lmer( psd ~ ((stimDuration+I(stimDuration^2))*frequency)+oddball
#               + ((stimDuration+I(stimDuration^2))|subject/trialInSub)
#               , psdData
#               , REML = FALSE
# )
fm1d <- lmer( psd ~ (stimDuration+I(stimDuration^2))*frequency
+ ((stimDuration+I(stimDuration^2))|subject/trialInSub)
, psdData
, REML = FALSE
)
# anova(fm1z, fm1a, fm1b, fm1c, fm1d)
anova(fm1a, fm1d)
fm1b <- lmer( psd ~ ((stimDuration+I(stimDuration^2))+frequency+oddball)^2
+ ((stimDuration+I(stimDuration^2))|subject/trialInSub)
, psdData
, REML = FALSE
)
fm1c <- lmer( psd ~ ((stimDuration+I(stimDuration^2))*frequency)+oddball
+ ((stimDuration+I(stimDuration^2))|subject/trialInSub)
, psdData
, REML = FALSE
)
anova(fm1z, fm1a, fm1b, fm1c, fm1d)
anova(fm1a, fm1b, fm1c, fm1d)
mcmc <- pvals.fnc( fm1a, nsim=5000, withMCMC=TRUE )
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(grid)
source("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/deps/cleanPlot.R")
source("createSnrDatasetFnc.R")
# subsetChLabel <- c("ch-O", "ch-PO-O", "ch-P-PO-O", "ch-CP-P-PO-O", "ch-C-CP-P-PO-O", "ch-all")
# harmonicsLabel <- c("fund","fund-ha1")
subsetChLabel <- c("ch-P-PO-O")
harmonicsLabel <- c("fund-ha1")
snrData <- createSnrDatasetFnc(subsetChLabel, harmonicsLabel)
varList <- c( "subject", "run", "roundNb", "time" )
accData <- ddply( snrData, varList, summarize
, targetFrequency = unique(targetFrequency)
, oddball = unique(oddball)
, correctness = ( unique(targetFrequency) == watchedFrequency[which.max(snr)] ) * 1
)
accData$timeFac <- as.factor(accData$time)
pp <- ggplot( accData, aes(time, correctness, colour=oddball ) )
pp <- pp + stat_summary(fun.y = mean, geom="point", position = position_dodge(0.2))
pp <- pp + stat_summary(fun.y = mean, geom="line", aes(group=oddball), position = position_dodge(0.2))
pp <- cleanPlot(pp)
print(pp)
pp1 <- pp + facet_wrap( ~targetFrequency )
print(pp1)
pp2 <- pp + facet_wrap( ~subject )
print(pp2)
pp3 <- pp + facet_grid( targetFrequency~subject )
print(pp3)
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(grid)
source("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/deps/cleanPlot.R")
source("createSnrDatasetFnc.R")
# subsetChLabel <- c("ch-O", "ch-PO-O", "ch-P-PO-O", "ch-CP-P-PO-O", "ch-C-CP-P-PO-O", "ch-all")
# harmonicsLabel <- c("fund","fund-ha1")
subsetChLabel <- c("ch-O")
harmonicsLabel <- c("fund-ha1")
snrData <- createSnrDatasetFnc(subsetChLabel, harmonicsLabel)
varList <- c( "subject", "run", "roundNb", "time" )
accData <- ddply( snrData, varList, summarize
, targetFrequency = unique(targetFrequency)
, oddball = unique(oddball)
, correctness = ( unique(targetFrequency) == watchedFrequency[which.max(snr)] ) * 1
)
accData$timeFac <- as.factor(accData$time)
pp <- ggplot( accData, aes(time, correctness, colour=oddball ) )
pp <- pp + stat_summary(fun.y = mean, geom="point", position = position_dodge(0.2))
pp <- pp + stat_summary(fun.y = mean, geom="line", aes(group=oddball), position = position_dodge(0.2))
pp <- cleanPlot(pp)
print(pp)
pp1 <- pp + facet_wrap( ~targetFrequency )
print(pp1)
pp2 <- pp + facet_wrap( ~subject )
print(pp2)
pp3 <- pp + facet_grid( targetFrequency~subject )
print(pp3)
library(lme4)
library(LMERConvenienceFunctions)
library(languageR)
lm1 <- glmer( correctness ~ targetFrequency*timeFac*oddball + ( 1 | subject/timeFac ), data = accData, family = binomial )
lm0 <- glmer( correctness ~ targetFrequency*timeFac + ( 1 | subject/timeFac ), data = accData, family = binomial )
anova(lm1,lm0)
summary(lm1)
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(grid)
source("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/deps/cleanPlot.R")
source("createSnrDatasetFnc.R")
# subsetChLabel <- c("ch-O", "ch-PO-O", "ch-P-PO-O", "ch-CP-P-PO-O", "ch-C-CP-P-PO-O", "ch-all")
# harmonicsLabel <- c("fund","fund-ha1")
subsetChLabel <- c("ch-PO-O")
harmonicsLabel <- c("fund-ha1")
snrData <- createSnrDatasetFnc(subsetChLabel, harmonicsLabel)
varList <- c( "subject", "run", "roundNb", "time" )
accData <- ddply( snrData, varList, summarize
, targetFrequency = unique(targetFrequency)
, oddball = unique(oddball)
, correctness = ( unique(targetFrequency) == watchedFrequency[which.max(snr)] ) * 1
)
accData$timeFac <- as.factor(accData$time)
pp <- ggplot( accData, aes(time, correctness, colour=oddball ) )
pp <- pp + stat_summary(fun.y = mean, geom="point", position = position_dodge(0.2))
pp <- pp + stat_summary(fun.y = mean, geom="line", aes(group=oddball), position = position_dodge(0.2))
pp <- cleanPlot(pp)
print(pp)
pp1 <- pp + facet_wrap( ~targetFrequency )
print(pp1)
pp2 <- pp + facet_wrap( ~subject )
print(pp2)
pp3 <- pp + facet_grid( targetFrequency~subject )
print(pp3)
anova(lm1,lm0)
lm0 <- glmer( correctness ~ 1 + ( 1 | subject/timeFac ), data = accData, family = binomial )
lm1 <- glmer( correctness ~ time + ( 1 | subject/timeFac ), data = accData, family = binomial )
anova(lm0,lm1)
tt <- anova(lm0,lm1)
tt
pp[1] <- anova(lm0,lm1)
pp <- vector()
pp[1] <- anova(lm0,lm1)
pp <- vector(length=5)
pp
pp[1] <- anova(lm0,lm1)
pp <- vector("list", length=5)
pp[1] <- anova(lm0,lm1)
pp
pp <- list()
pp
pp[1] <- anova(lm0,lm1)
pp <- vector("list", n)
pp <- vector("list", 5)
pp
pp[[1]] <- anova(lm0,lm1)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/accuracyPlots.R', echo=TRUE)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/accuracyPlots.R', echo=TRUE)
iCh
resultList
resultList[[1]]
resultList[[2]]
resultList[[3]]
resultList[[4]]
resultList[[5]]
resultList[[6]]
anova(lm1, lm0)
