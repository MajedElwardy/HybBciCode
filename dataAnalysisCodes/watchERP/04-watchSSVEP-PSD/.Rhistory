clc
source('D:/KULeuven/PhD/Statistics/LMEStuffs/Winter (2011) A very basic tutorial for performing linear mixed effects analyses/RScriptLMM.R')
source('D:/KULeuven/PhD/Statistics/LMEStuffs/Winter (2011) A very basic tutorial for performing linear mixed effects analyses/RScriptLMM.R')
fix(politeness.model)
summary(politeness)
boxplot(frequency ~ attitude, data=politeness)
rm(list=ls());
politeness <- read.csv(file="d:/KULeuven/PhD/Statistics/LMEStuffs/Winter (2011) A very basic tutorial for performing linear mixed effects analyses/politeness_data.csv");
boxplot(frequency ~ attitude, data=politeness)
median(politeness[which(politeness$attitude=="pol"),]$frequency, na.rm=T)
median(politeness[which(politeness$attitude=="pol"),]$frequency, na.rm=T)
median(politeness[which(politeness$attitude=="inf"),]$frequency)
boxplot(frequency ~ attitude*gender, data=politeness)
politeness.model = lmer(frequency ~ attitude + (1|subject) + (1|scenario), data=politeness)
politeness.model
14.544^2
politeness.model.p = pvals.fnc(politeness.model)
politeness.model.p
mean(politeness$frequency, na.rm=T)
mean(politeness[which(politeness$gender == "F"),]$frequency)
mean(politeness[which(politeness$gender == "M"),]$frequency)
mean(politeness[which(politeness$gender == "M"),]$frequency, na.rm=T)
politeness.model = lmer(frequency ~ attitude*gender + (1|subject) + (1|scenario), data=politeness)
politeness.model
politeness.model.p = pvals.fnc(politeness.model)
politeness.model.p
plot(fitted(politeness.model),residuals(politeness.model))
example3 <- read.table("http://www.unt.edu/rss/class/Jon/R_SC/Module3/ExampleData3.txt", header=TRUE, sep="", na.strings="NA", dec=".", strip.white=TRUE)
summary(example3)
head(example3, 15)
attributes(example3)
library(lme4)
?lme4
?lmer
(1997). The data frame contains measurements of heart and body weight
install.packages("tools")
install.packages("stringr")
install.packages("tools")
install.packages("patchDVI", repos="http://R-Forge.R-project.org")
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP_2stim/02-ter-p3Classification/")
rm(list = ls())
library(ggplot2)
library(lme4)
library(LMERConvenienceFunctions)
library(languageR)
#################################################################################################################
iS <- 1
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watchERP_2stim/02-classify-erps/linSvm_1RunsForTrain/subject_S%d/Results_forLogisiticRegression.txt", iS)
accData1 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
str(accData1)
summary(accData1)
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP_2stim/02-ter-p3Classification/")
rm(list = ls())
library(ggplot2)
library(lme4)
library(LMERConvenienceFunctions)
library(languageR)
#################################################################################################################
iS <- 1
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watchERP_2stim/02-classify-erps/linSvm_1RunsForTrain/subject_S%d/Results_forLogisiticRegression.txt", iS)
accData1 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
str(accData1)
summary(accData1)
#################################################################################################################
pp <- ggplot( accData1, aes(nRep, correctness, colour=targetFrequency, shape=targetFrequency) )
pp <- pp + stat_summary(fun.y = mean, geom="point",  position = position_jitter(w = 0.2, h = 0), size = 3)
# pp <- pp + stat_summary(fun.y = mean, geom="point", position = position_dodge(.5))
# pp <- pp + stat_summary(fun.data = mean_cl_normal, geom = "pointrange", width = 0.2, position = position_dodge(.5), size = 1)
# pp <- pp + facet_wrap( ~subject )
# pp <- cleanPlot(pp)
# pp <- pp + theme(legend.position=c(0.8334,0.1667))
pp
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP_2stim/02-ter-p3Classification/")
rm(list = ls())
library(ggplot2)
library(lme4)
library(LMERConvenienceFunctions)
library(languageR)
#################################################################################################################
iS <- 1
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watchERP_2stim/02-classify-erps/linSvm_1RunsForTrain/subject_S%d/Results_forLogisiticRegression.txt", iS)
accData1 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData1$targetFrequency <- as.factor(accData1$targetFrequency)
str(accData1)
summary(accData1)
#################################################################################################################
pp <- ggplot( accData1, aes(nRep, correctness, colour=targetFrequency, shape=targetFrequency) )
pp <- pp + stat_summary(fun.y = mean, geom="point",  position = position_jitter(w = 0.2, h = 0), size = 3)
# pp <- pp + stat_summary(fun.y = mean, geom="point", position = position_dodge(.5))
# pp <- pp + stat_summary(fun.data = mean_cl_normal, geom = "pointrange", width = 0.2, position = position_dodge(.5), size = 1)
# pp <- pp + facet_wrap( ~subject )
# pp <- cleanPlot(pp)
# pp <- pp + theme(legend.position=c(0.8334,0.1667))
pp
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP_2stim/02-ter-p3Classification/")
rm(list = ls())
library(ggplot2)
library(lme4)
library(LMERConvenienceFunctions)
library(languageR)
#################################################################################################################
iS <- 1
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watchERP_2stim/02-classify-erps/linSvm_1RunsForTrain/subject_S%d/Results_forLogisiticRegression.txt", iS)
accData1 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData1$targetFrequency <- as.factor(accData1$targetFrequency)
str(accData1)
summary(accData1)
#################################################################################################################
pp <- ggplot( accData1, aes(nAverages, correctness, colour=targetFrequency, shape=targetFrequency) )
pp <- pp + stat_summary(fun.y = mean, geom="point",  position = position_jitter(w = 0.2, h = 0), size = 3)
# pp <- pp + stat_summary(fun.y = mean, geom="point", position = position_dodge(.5))
# pp <- pp + stat_summary(fun.data = mean_cl_normal, geom = "pointrange", width = 0.2, position = position_dodge(.5), size = 1)
# pp <- pp + facet_wrap( ~subject )
# pp <- cleanPlot(pp)
# pp <- pp + theme(legend.position=c(0.8334,0.1667))
pp
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP_2stim/02-ter-p3Classification/")
rm(list = ls())
library(ggplot2)
library(lme4)
library(LMERConvenienceFunctions)
library(languageR)
#################################################################################################################
iS <- 1
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watchERP_2stim/02-classify-erps/linSvm_1RunsForTrain/subject_S%d/Results_forLogisiticRegression.txt", iS)
accData1 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData1$targetFrequency <- as.factor(accData1$targetFrequency)
str(accData1)
summary(accData1)
#################################################################################################################
pp <- ggplot( accData1, aes(nAverages, correctness, colour=targetFrequency, shape=targetFrequency) )
pp <- pp + stat_summary(fun.y = mean, geom="point",  position = position_jitter(w = 0.2, h = 0), size = 3)
# pp <- pp + stat_summary(fun.y = mean, geom="point", position = position_dodge(.5))
# pp <- pp + stat_summary(fun.data = mean_cl_normal, geom = "pointrange", width = 0.2, position = position_dodge(.5), size = 1)
# pp <- pp + facet_wrap( ~subject )
# pp <- cleanPlot(pp)
# pp <- pp + theme(legend.position=c(0.8334,0.1667))
pp
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP_2stim/02-ter-p3Classification/")
rm(list = ls())
library(ggplot2)
library(lme4)
library(LMERConvenienceFunctions)
library(languageR)
#################################################################################################################
iS <- 1
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watchERP_2stim/02-classify-erps/linSvm_1RunsForTrain/subject_S%d/Results_forLogisiticRegression.txt", iS)
accData1 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
accData1$targetFrequency <- as.factor(accData1$targetFrequency)
str(accData1)
summary(accData1)
#################################################################################################################
pp <- ggplot( accData1, aes(nAverages, correctness, colour=targetFrequency, shape=targetFrequency) )
pp <- pp + stat_summary(fun.y = mean, geom="point",  position = position_jitter(w = 0.2, h = 0), size = 3)
# pp <- pp + stat_summary(fun.y = mean, geom="point", position = position_dodge(.5))
# pp <- pp + stat_summary(fun.data = mean_cl_normal, geom = "pointrange", width = 0.2, position = position_dodge(.5), size = 1)
# pp <- pp + facet_wrap( ~subject )
# pp <- cleanPlot(pp)
# pp <- pp + theme(legend.position=c(0.8334,0.1667))
pp
iS<-1
nRunsForTrain <- 1
filename <- sprintf("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watchERP_2stim/02-classify-erps/linSvm_%dRunsForTrain/subject_S%d/Results_forLogisiticRegression.txt", nRunsForTrain, iS)
accData1 <- read.csv(filename, header = TRUE, sep = ",", strip.white = TRUE)
str(accData1)
summary(accData1)
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(grid)
source("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/deps/cleanPlot.R")
####################################################################################################################
####################################################################################################################
####################################################################################################################
####################################################################################################################
snrData <- read.csv("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/04-watchSSVEP-SNR/snrDatasetOz.csv", header = TRUE)
snrData$frequency = as.factor(snrData$frequency)
snrData$oddball = as.factor(snrData$oddball)
snrData$fileNb = as.factor(snrData$fileNb)
snrData$trial = as.factor(snrData$trial)
# snrDataOz$stimDuration = as.factor(snrDataOz$stimDuration)
str(snrData)
summary(snrData)
# figname = paste0("perFreqSubType_", file, ".png")
pp <- ggplot( snrData, aes(stimDuration, snr, colour=oddball ) )
#   pp <- pp + stat_summary(fun.y = mean, geom="point",  position = position_jitter(w = 0.2, h = 0), size = 3)
# pp <- pp + geom_point( position = position_jitter(w = 0.2, h = 0), size = 3 )
# pp <- pp + geom_smooth(method="lm", aes(fill=oddball), se = F)
pp <- pp + stat_summary(fun.data = mean_cl_normal, geom="pointrange", position = position_dodge(0.2))
# pp <- pp + stat_summary(fun.y = mean, geom="line", position = position_dodge(0.2))
pp <- pp + facet_grid( subject ~ frequency, scales = "free_y"  )
pp <- cleanPlot(pp)
pp
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(grid)
source("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/deps/cleanPlot.R")
####################################################################################################################
####################################################################################################################
####################################################################################################################
####################################################################################################################
snrData <- read.csv("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/04-watchSSVEP-SNR/snrDatasetOz.csv", header = TRUE)
snrData$frequency = as.factor(snrData$frequency)
snrData$oddball = as.factor(snrData$oddball)
snrData$fileNb = as.factor(snrData$fileNb)
snrData$trial = as.factor(snrData$trial)
# snrDataOz$stimDuration = as.factor(snrDataOz$stimDuration)
str(snrData)
summary(snrData)
# figname = paste0("perFreqSubType_", file, ".png")
pp <- ggplot( snrData, aes(stimDuration, snr, colour=oddball ) )
#   pp <- pp + stat_summary(fun.y = mean, geom="point",  position = position_jitter(w = 0.2, h = 0), size = 3)
# pp <- pp + geom_point( position = position_jitter(w = 0.2, h = 0), size = 3 )
# pp <- pp + geom_smooth(method="lm", aes(fill=oddball), se = F)
pp <- pp + stat_summary(fun.data = mean_cl_normal, geom="pointrange", position = position_dodge(0.2))
# pp <- pp + stat_summary(fun.y = mean, geom="line", position = position_dodge(0.2))
pp <- pp + facet_grid( subject ~ frequency)#, scales = "free_y"  )
pp <- cleanPlot(pp)
pp
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(grid)
source("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/deps/cleanPlot.R")
####################################################################################################################
####################################################################################################################
####################################################################################################################
####################################################################################################################
snrData <- read.csv("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/04-watchSSVEP-SNR/snrDatasetOz.csv", header = TRUE)
snrData$frequency = as.factor(snrData$frequency)
snrData$oddball = as.factor(snrData$oddball)
snrData$fileNb = as.factor(snrData$fileNb)
snrData$trial = as.factor(snrData$trial)
# snrDataOz$stimDuration = as.factor(snrDataOz$stimDuration)
str(snrData)
summary(snrData)
# figname = paste0("perFreqSubType_", file, ".png")
pp <- ggplot( snrData, aes(stimDuration, snr, colour=oddball ) )
#   pp <- pp + stat_summary(fun.y = mean, geom="point",  position = position_jitter(w = 0.2, h = 0), size = 3)
# pp <- pp + geom_point( position = position_jitter(w = 0.2, h = 0), size = 3 )
# pp <- pp + geom_smooth(method="lm", aes(fill=oddball), se = F)
pp <- pp + stat_summary(fun.data = mean_cl_normal, geom="pointrange", position = position_dodge(0.2))
# pp <- pp + stat_summary(fun.y = mean, geom="line", position = position_dodge(0.2))
pp <- pp + facet_grid( subject ~ frequency, scales = "free"  )
pp <- cleanPlot(pp)
pp
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/snrStudy2.R', echo=TRUE)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/snrStudy2.R', echo=TRUE)
factorList <- c("stimDuration", "frequency", "oddball")
outcome <- "snr"
dataframe <- snrData
source("d:/KULeuven/PhD/rLibrary/plotFactorMeans_InteractionGraphs.R")
plotFactorMeans_InteractionGraphs(dataframe, factorList, outcome)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/snrStudy2.R', echo=TRUE)
str(snrData)
summary(snrData)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/snrStudy2.R', echo=TRUE)
pp
toto <- file.exists("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciResults/watch-ERP/04-watchSSVEP-SNR/")
toto
toto <- file.exists("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciResults/watch-ERP/04-watchSSVEP-SNR")
toto
ls
toto <- file.info("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciResults/watch-ERP/04-watchSSVEP-SNR/")
toto
toto <- file.info("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciResults/watch-ERP/04-watchSSVEP-SNR")
toto
d:\KULeuven\PhD\Work\Hybrid-BCI\HybBciResults\watchERP\04-watchSSVEP-SNR\
toto <- file.exists("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciResults/watchERP/04-watchSSVEP-SNR/")
toto
toto <- file.info("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciResults/watchERP/04-watchSSVEP-SNR/")
toto
toto <- file.info("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciResults/watchERP/04-watchSSVEP-SNR/")$isDir
toto
toto <- file.info("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciResults/watchERP/04-watchSSVEP-SNR/")$isdir
toto
!toto
source('~/.active-rstudio-document')
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/snrStudy2.R', echo=TRUE)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/snrStudy2.R', echo=TRUE)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/snrStudy2.R', echo=TRUE)
resDir
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/snrStudy2.R', echo=TRUE)
resDir
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/snrStudy2.R', echo=TRUE)
file.info(resDir)
if (!(file.info(resDir)$isdir==TRUE) {dir.create(resDir)}
(file.info(resDir)$isdir!=TRUE)
(file.info(resDir)$isdir==TRUE)
(file.info(resDir)$isdir==NA)
if (!file.info(resDir)$isdir) {dir.create(resDir)}
(!file.info(resDir)$isdir)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/snrStudy2.R', echo=TRUE)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/snrStudy2.R', echo=TRUE)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/snrStudy2.R', echo=TRUE)
file.path(resDir, "interactionGraph.png")
png(filename = file.path(resDir, "interactionGraph.png")
, width = 30
, height = 20
, units = "cm"
, res = 300
)
plotFactorMeans_InteractionGraphs(dataframe, factorList, outcome)
dev.off()
dev.off()
dev.off()
dev.list
dev.list()
graphics.off
graphics.off()
dev.list()
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(grid)
source("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/deps/cleanPlot.R")
source("d:/KULeuven/PhD/rLibrary/plotFactorMeans_InteractionGraphs.R")
####################################################################################################################
####################################################################################################################
# generatePlots <- function(file)
# {
# }
####################################################################################################################
####################################################################################################################
fileDir <- "d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/04-watchSSVEP-SNR"
filename <- "snrDataset_O1OzO2_2Ha"
fullfilename <- file.path( fileDir, paste0(filename, ".csv") )
resDir <- "d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciResults/watchERP/04-watchSSVEP-SNR"
resDir <- file.path(resDir, filename)
dir.create(resDir, showWarnings=FALSE)
snrData <- read.csv(fullfilename, header = TRUE)
snrData$frequency = as.factor(snrData$frequency)
snrData$oddball = as.factor(snrData$oddball)
snrData$fileNb = as.factor(snrData$fileNb)
snrData$trial = as.factor(snrData$trial)
str(snrData)
summary(snrData)
dev.list()
pp <- ggplot( snrData, aes(stimDuration, snr, colour=oddball ) )
pp <- pp + stat_summary(fun.data = mean_cl_normal, geom="pointrange", position = position_dodge(0.2))
pp <- pp + facet_grid( subject ~ frequency, scales = "free_y"  )
pp <- cleanPlot(pp)
pp
dev.list
dev.list()
figname = paste0("compareOddball", ".png")
ggsave( figname
, plot = pp
, path = resDir
, width = 30
, height = 20
, units = "cm"
)
dev.list()
pp2 <- ggplot( snrData, aes(stimDuration, snr, colour=frequency ) )
pp2 <- pp2 + stat_summary(fun.data = mean_cl_normal, geom="pointrange", position = position_dodge(0.4))
pp2 <- pp2 + facet_grid( oddball ~ subject, scales = "free_y"  )
pp2 <- cleanPlot(pp2)
pp2
dev.list()
figname = paste0("compareFrequencies", ".png")
ggsave( figname
, plot = pp
, path = resDir
, width = 30
, height = 20
, units = "cm"
)
dev.lidt
dev.list
dev.list()
dev.off()
dev.list()
pp <- ggplot( snrData, aes(stimDuration, snr, colour=oddball ) )
pp <- pp + stat_summary(fun.data = mean_cl_normal, geom="pointrange", position = position_dodge(0.2))
pp <- pp + facet_grid( subject ~ frequency, scales = "free_y"  )
pp <- cleanPlot(pp)
dev.list()
figname = paste0("compareOddball", ".png")
ggsave( figname
, plot = pp
, path = resDir
, width = 30
, height = 20
, units = "cm"
)
dev.list()
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/snrStudy2.R', echo=TRUE)
filenames <- c("snrDataset_O1OzO2_1Ha", "snrDataset_O1OzO2_2Ha", "snrDataset_Oz_1Ha", "snrDataset_Oz_2Ha", "snrDataset_SelChan_1Ha", "snrDataset_SelChan_2Ha")
filenames
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/snrStudy2.R', echo=TRUE)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/snrStudy2.R', echo=TRUE)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/snrStudy2.R', echo=TRUE)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/snrStudy2.R', echo=TRUE)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/snrStudy2.R', echo=TRUE)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-PSD/psdStudy.R', echo=TRUE)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-PSD/psdStudy.R', echo=TRUE)
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/")
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/srnLmer.R', echo=TRUE)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-PSD/psdLmer.R', echo=TRUE)
fullfilename
filename
filename <- psdDataset_O1OzO2_1Ha
filename <- "psdDataset_O1OzO2_1Ha"
fileDir <- "d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/04-watchSSVEP-PSD"
fullfilename <- file.path( fileDir, paste0(filename, ".csv") )
resDir <- "d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciResults/watchERP/04-watchSSVEP-PSD"
resDir <- file.path(resDir, filename)
dir.create(resDir, showWarnings=FALSE)
psdData <- read.csv(fullfilename, header = TRUE)
psdData$frequency = as.factor(psdData$frequency)
psdData$oddball = as.factor(psdData$oddball)
psdData$fileNb = as.factor(psdData$fileNb)
psdData$trial = as.factor(psdData$trial)
str(psdData)
summary(psdData)
setwd("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-PSD/")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(grid)
source("d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/deps/cleanPlot.R")
source("d:/KULeuven/PhD/rLibrary/plotFactorMeans_InteractionGraphs.R")
filename <- "psdDataset_O1OzO2_1Ha"
####################################################################################################################
####################################################################################################################
# logisticReg <- function(filename)
# {
fileDir <- "d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciProcessedData/watch-ERP/04-watchSSVEP-PSD"
fullfilename <- file.path( fileDir, paste0(filename, ".csv") )
resDir <- "d:/KULeuven/PhD/Work/Hybrid-BCI/HybBciResults/watchERP/04-watchSSVEP-PSD"
resDir <- file.path(resDir, filename)
dir.create(resDir, showWarnings=FALSE)
psdData <- read.csv(fullfilename, header = TRUE)
psdData$frequency       <- as.factor(psdData$frequency)
psdData$oddball         <- as.factor(psdData$oddball)
psdData$fileNb          <- as.factor(psdData$fileNb)
psdData$trial           <- as.factor(psdData$trial)
psdData$stimDurationFac <- as.factor(psdData$stimDuration)
# add coding variable for nRep nested within subject
psdData$stimDurationWithinSub <- psdData$stimDuration
allSubs   <- levels(psdData$subject)
nSubs   <- length(allSubs)
for (iS in 1:nSubs){
psdData[psdData$subject==allSubs[iS], ]$stimDurationWithinSub <- iS*1000 + psdData[psdData$subject==allSubs[iS], ]$stimDurationWithinSub
}
psdData$stimDurationWithinSub <- as.factor(psdData$stimDurationWithinSub)
str(psdData)
summary(psdData)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-PSD/psdLmer.R', echo=TRUE)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-PSD/psdLmer.R', echo=TRUE)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-PSD/psdLmer.R', echo=TRUE)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-PSD/psdLmer.R', echo=TRUE)
anova( lmH000, lmH001a, lmH002a, lmH003, lmH004 )
anova( lmH000, lmH001a, lmH002b, lmH003, lmH004 )
anova( lmH000, lmH001b, lmH002b, lmH003, lmH004 )
anova( lmH000, lmH001b, lmH002c, lmH003, lmH004 )
anova( lmH000, lmH001c, lmH002a, lmH003, lmH004 )
anova( lmH000, lmH001c, lmH002c, lmH003, lmH004 )
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-PSD/psdLmer.R', echo=TRUE)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-PSD/psdLmer.R', echo=TRUE)
summary(psdData)
lmH004
lmH003
pp <- pvals.fnc(lmH004)
library(languageR)
pp <- pvals.fnc(lmH004)
pp
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-PSD/psdLmer.R', echo=TRUE)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-PSD/psdLmer.R', echo=TRUE)
pp
pp2
lmH103
anova( lmH002a, lmH003 )
anova( lmH102a, lmH103 )
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-PSD/psdLmer.R', echo=TRUE)
lmH003
lmH004
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-PSD/psdPlots.R', echo=TRUE)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-SNR/snrPlots.R', echo=TRUE)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-PSD/psdPlots.R', echo=TRUE)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-PSD/psdLmer.R', echo=TRUE)
anova( lmH003, lmH004 )
lmH004
anova( lmH002a, lmH003 )
anova( lmH002b, lmH003 )
anova( lmH002c, lmH003 )
anova( lmH103, lmH104 )
anova( lmH102a, lmH103 )
anova( lmH102b, lmH103 )
anova( lmH102c, lmH103 )
pp <- pvals.fnc(lmH003)
pp
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-PSD/psdLmer.R', echo=TRUE)
anova( lmH003, lmH004 )
anova( lmH002b, lmH003 )
anova( lmH002c, lmH003 )
pp <- pvals.fnc(lmH003)
pp
pp <- pvals.fnc(lmH004)
pp
str(psdData)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-PSD/psdPlots.R', echo=TRUE)
source('D:/KULeuven/PhD/Work/Hybrid-BCI/HybBciCode/dataAnalysisCodes/watchERP/04-watchSSVEP-PSD/psdLmer.R', echo=TRUE)
pp <- pvals.fnc(lmH004)
PP
pp
